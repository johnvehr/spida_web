{"ast":null,"code":"import * as types from \"../constants\";\nimport taskApi from '../api/taskApi';\nexport function projectTasks(project_id, subdomain) {\n  return function (dispatch) {\n    return taskApi.taskEndpoint('tasks', `?project_id=${project_id}&subdomain=${subdomain}`, 'GET').then(tasks => {\n      dispatch({\n        type: types.GET_PROJECT_TASKS,\n        payload: tasks\n      });\n    }).catch(error => {\n      throw error;\n    });\n  };\n}\nexport function addTaskToParent(client_plan_params, subdomain) {\n  return function (dispatch) {\n    taskApi.taskEndpoint('tasks', `?project_id=${client_task_params[0].id}&id=${client_task_params[1]}&type=${client_task_params[2]}&subdomain=${subdomain}`, 'POST', client_task_params[3]).then(plan => {\n      dispatch({\n        type: types.ADD_TASK,\n        payload: plan\n      });\n    }).catch(error => {\n      throw error;\n    });\n  };\n}\nexport function deleteTaskFromParent(task) {\n  return function (dispatch) {\n    taskApi.deleteTask(task).then(succ => {\n      dispatch({\n        type: types.DELETE_TASK,\n        payload: {\n          task: task,\n          response: succ\n        }\n      });\n    }).catch(error => {\n      throw error;\n    });\n  };\n}","map":{"version":3,"sources":["/Users/johnvehr/Builder/kuuik/octoe_web/src/redux/actions/taskActions.js"],"names":["types","taskApi","projectTasks","project_id","subdomain","dispatch","taskEndpoint","then","tasks","type","GET_PROJECT_TASKS","payload","catch","error","addTaskToParent","client_plan_params","client_task_params","id","plan","ADD_TASK","deleteTaskFromParent","task","deleteTask","succ","DELETE_TASK","response"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,cAAvB;AACA,OAAOC,OAAP,MAAoB,gBAApB;AAEA,OAAO,SAASC,YAAT,CAAsBC,UAAtB,EAAiCC,SAAjC,EAA2C;AAChD,SAAO,UAASC,QAAT,EAAkB;AACvB,WAAOJ,OAAO,CAACK,YAAR,CAAqB,OAArB,EAA8B,eAAcH,UAAW,cAAaC,SAAU,EAA9E,EAAiF,KAAjF,EAAwFG,IAAxF,CAA6FC,KAAK,IAAI;AAC3GH,MAAAA,QAAQ,CAAC;AACPI,QAAAA,IAAI,EAAET,KAAK,CAACU,iBADL;AAEPC,QAAAA,OAAO,EAAEH;AAFF,OAAD,CAAR;AAID,KALM,EAKJI,KALI,CAKEC,KAAK,IAAI;AAChB,YAAMA,KAAN;AACD,KAPM,CAAP;AAQD,GATD;AAUD;AAED,OAAO,SAASC,eAAT,CAAyBC,kBAAzB,EAA4CX,SAA5C,EAAsD;AAC3D,SAAO,UAASC,QAAT,EAAkB;AACvBJ,IAAAA,OAAO,CAACK,YAAR,CAAqB,OAArB,EAA8B,eAAcU,kBAAkB,CAAC,CAAD,CAAlB,CAAsBC,EAAG,OAAMD,kBAAkB,CAAC,CAAD,CAAI,SAAQA,kBAAkB,CAAC,CAAD,CAAI,cAAaZ,SAAU,EAAtJ,EAAwJ,MAAxJ,EAA+JY,kBAAkB,CAAC,CAAD,CAAjL,EAAsLT,IAAtL,CAA2LW,IAAI,IAAI;AACjMb,MAAAA,QAAQ,CAAC;AACPI,QAAAA,IAAI,EAAET,KAAK,CAACmB,QADL;AAEPR,QAAAA,OAAO,EAAEO;AAFF,OAAD,CAAR;AAID,KALD,EAKGN,KALH,CAKSC,KAAK,IAAI;AAChB,YAAMA,KAAN;AACD,KAPD;AAQD,GATD;AAUD;AAED,OAAO,SAASO,oBAAT,CAA8BC,IAA9B,EAAmC;AACxC,SAAO,UAAShB,QAAT,EAAkB;AACvBJ,IAAAA,OAAO,CAACqB,UAAR,CAAmBD,IAAnB,EAAyBd,IAAzB,CAA8BgB,IAAI,IAAI;AACpClB,MAAAA,QAAQ,CAAC;AACPI,QAAAA,IAAI,EAAET,KAAK,CAACwB,WADL;AAEPb,QAAAA,OAAO,EAAE;AACPU,UAAAA,IAAI,EAAEA,IADC;AAEPI,UAAAA,QAAQ,EAAEF;AAFH;AAFF,OAAD,CAAR;AAOD,KARD,EAQGX,KARH,CAQSC,KAAK,IAAI;AAChB,YAAMA,KAAN;AACD,KAVD;AAWD,GAZD;AAaD","sourcesContent":["import * as types from \"../constants\";\nimport taskApi from '../api/taskApi'\n\nexport function projectTasks(project_id,subdomain){\n  return function(dispatch){\n    return taskApi.taskEndpoint('tasks',`?project_id=${project_id}&subdomain=${subdomain}`, 'GET').then(tasks => {\n      dispatch({\n        type: types.GET_PROJECT_TASKS,\n        payload: tasks\n      })\n    }).catch(error => {\n      throw(error)\n    })\n  }\n}\n\nexport function addTaskToParent(client_plan_params,subdomain){\n  return function(dispatch){\n    taskApi.taskEndpoint('tasks',`?project_id=${client_task_params[0].id}&id=${client_task_params[1]}&type=${client_task_params[2]}&subdomain=${subdomain}`,'POST',client_task_params[3]).then(plan => {\n      dispatch({\n        type: types.ADD_TASK,\n        payload: plan\n      })\n    }).catch(error => {\n      throw(error)\n    })\n  }\n}\n\nexport function deleteTaskFromParent(task){\n  return function(dispatch){\n    taskApi.deleteTask(task).then(succ => {\n      dispatch({\n        type: types.DELETE_TASK,\n        payload: {\n          task: task,\n          response: succ\n        }\n      })\n    }).catch(error => {\n      throw(error)\n    })\n  }\n}\n"]},"metadata":{},"sourceType":"module"}