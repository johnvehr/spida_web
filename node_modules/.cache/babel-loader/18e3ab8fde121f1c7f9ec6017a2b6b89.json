{"ast":null,"code":"import _slicedToArray from \"/Users/johnvehr/Builder/kuuik/octoe_web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/johnvehr/Builder/kuuik/octoe_web/src/pages/hub/projectGramBig.js\";\nimport React from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport { connect } from \"react-redux\";\nimport PopoverNode from './popoverNode';\nimport { Badge, Card, CardBody, CardHeader, CardTitle } from \"reactstrap\";\nimport { Tooltip, Popover, Popconfirm, Message, Button, Drawer, Form, Input, Item, Icon, Menu, Progress } from 'antd';\nimport { Group } from '@vx/group';\nimport { Tree } from '@vx/hierarchy';\nimport { LinearGradient } from '@vx/gradient';\nimport { Zoom } from '@vx/zoom';\nimport { localPoint } from '@vx/event';\nimport { scaleLinear } from '@vx/scale';\nimport { hierarchy } from 'd3-hierarchy';\nimport { pointRadial } from 'd3-shape';\nimport { RectClipPath } from '@vx/clip-path';\nimport { LinkHorizontal, LinkVertical, LinkRadial, LinkHorizontalStep, LinkVerticalStep, LinkRadialStep, LinkHorizontalCurve, LinkVerticalCurve, LinkRadialCurve, LinkHorizontalLine, LinkVerticalLine, LinkRadialLine } from '@vx/shape';\n\nconst ProjectGramBig = ({\n  changeTranslate,\n  retrieveTask,\n  deleteTask,\n  newStatus,\n  task_details,\n  newtaskChange,\n  newPriority,\n  addTaskToParent,\n  account_users,\n  forceUpdate,\n  data,\n  state,\n  props,\n  theme\n}) => {\n  console.log(props);\n  console.log(account_users);\n  const _props$width = props.width,\n        width = _props$width === void 0 ? 700 : _props$width,\n        _props$height = props.height,\n        height = _props$height === void 0 ? 400 : _props$height,\n        _props$margin = props.margin,\n        margin = _props$margin === void 0 ? {\n    top: 10,\n    left: 10,\n    right: 10,\n    bottom: 10\n  } : _props$margin;\n  const innerWidth = width - margin.left - margin.right;\n  const innerHeight = height - margin.top - margin.bottom;\n  const layout = state.layout,\n        orientation = state.orientation,\n        linkType = state.linkType,\n        stepPercent = state.stepPercent;\n  let origin;\n  let sizeWidth;\n  let sizeHeight;\n\n  if (state.layout === 'polar') {\n    origin = {\n      x: innerWidth / 2,\n      y: innerHeight / 2\n    };\n    sizeWidth = 2 * Math.PI;\n    sizeHeight = Math.min(innerWidth, innerHeight) / 2;\n  } else {\n    origin = {\n      x: 0,\n      y: 0\n    };\n\n    if (orientation === 'vertical') {\n      sizeWidth = innerWidth;\n      sizeHeight = innerHeight;\n    } else {\n      sizeWidth = innerHeight;\n      sizeHeight = innerWidth;\n    }\n  }\n\n  return React.createElement(Card, {\n    className: \"flex-fill w-100\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, React.createElement(CardHeader, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, React.createElement(Badge, {\n    color: \"primary\",\n    className: \"float-right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, \"Overview\"), React.createElement(CardTitle, {\n    tag: \"h5\",\n    className: \"mb-0\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, \"SpidaGram\")), React.createElement(CardBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"chart chart-lg\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, React.createElement(Zoom, {\n    width: width,\n    height: height,\n    scaleXMin: 1 / 2,\n    scaleXMax: 4,\n    scaleYMin: 1 / 2,\n    scaleYMax: 4,\n    transformMatrix: state.initialTransform,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, zoom => {\n    return React.createElement(\"svg\", {\n      width: width,\n      height: height,\n      style: {\n        cursor: zoom.isDragging ? 'grabbing' : 'grab'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(RectClipPath, {\n      id: \"zoom-clip\",\n      width: 800,\n      height: 800,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }), React.createElement(LinearGradient, {\n      id: \"lg\",\n      from: \"#fd9b93\",\n      to: \"#fe6e9e\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }), React.createElement(\"rect\", {\n      onWheel: zoom.handleWheel,\n      onMouseDown: zoom.dragStart,\n      onMouseMove: zoom.dragMove,\n      onMouseUp: zoom.dragEnd,\n      onMouseLeave: () => {\n        if (!zoom.isDragging) return;\n        zoom.dragEnd();\n      },\n      width: width,\n      height: height,\n      rx: 14,\n      fill: \"#f3f0e3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }), React.createElement(Group, {\n      transform: zoom.toString(),\n      top: margin.top,\n      left: margin.left,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, React.createElement(Tree, {\n      root: hierarchy(data, d => d.isExpanded ? null : d.children),\n      size: [sizeWidth, sizeHeight],\n      separation: (a, b) => (a.parent == b.parent ? 1 : 0.5) / a.depth,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, data => React.createElement(Group, {\n      top: origin.y,\n      left: origin.x,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, data.links().map((link, i) => {\n      let LinkComponent;\n\n      if (layout === 'polar') {\n        if (linkType === 'step') {\n          LinkComponent = LinkRadialStep;\n        } else if (linkType === 'curve') {\n          LinkComponent = LinkRadialCurve;\n        } else if (linkType === 'line') {\n          LinkComponent = LinkRadialLine;\n        } else {\n          LinkComponent = LinkRadial;\n        }\n      } else {\n        if (orientation === 'vertical') {\n          if (linkType === 'step') {\n            LinkComponent = LinkVerticalStep;\n          } else if (linkType === 'curve') {\n            LinkComponent = LinkVerticalCurve;\n          } else if (linkType === 'line') {\n            LinkComponent = LinkVerticalLine;\n          } else {\n            LinkComponent = LinkVertical;\n          }\n        } else {\n          if (linkType === 'step') {\n            LinkComponent = LinkHorizontalStep;\n          } else if (linkType === 'curve') {\n            LinkComponent = LinkHorizontalCurve;\n          } else if (linkType === 'line') {\n            LinkComponent = LinkHorizontalLine;\n          } else {\n            LinkComponent = LinkHorizontal;\n          }\n        }\n      }\n\n      return React.createElement(LinkComponent, {\n        data: link,\n        percent: +stepPercent,\n        stroke: link.target.children ? '#153d8f' : '#eee',\n        strokeWidth: \"1\",\n        fill: \"none\",\n        key: i,\n        onClick: () => console.log(link),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      });\n    }), data.descendants().map((node, key) => {\n      const width = 140;\n      const height = 50;\n      let top;\n      let left;\n\n      if (layout === 'polar') {\n        const _pointRadial = pointRadial(node.x, node.y),\n              _pointRadial2 = _slicedToArray(_pointRadial, 2),\n              radialX = _pointRadial2[0],\n              radialY = _pointRadial2[1];\n\n        top = radialY;\n        left = radialX;\n      } else {\n        if (orientation === 'vertical') {\n          top = node.y;\n          left = node.x;\n        } else {\n          top = node.x;\n          left = node.y;\n        }\n      }\n\n      return React.createElement(Group, {\n        top: top,\n        left: left,\n        key: key,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209\n        },\n        __self: this\n      }, node.depth === 0 && React.createElement(Popover, {\n        placement: \"rightTop\",\n        content: React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 211\n          },\n          __self: this\n        }, React.createElement(PopoverNode, {\n          name: \"Vertical icon\",\n          className: \"tab-vertical\",\n          retrieveTask: retrieveTask,\n          node: node,\n          update: forceUpdate,\n          deleteTask: deleteTask,\n          task_details: task_details,\n          newtaskChange: newtaskChange,\n          newPriority: newPriority,\n          newStatus: newStatus,\n          addTaskToParent: addTaskToParent,\n          account_users: account_users,\n          type: \"root\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 212\n          },\n          __self: this\n        })),\n        trigger: \"click\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211\n        },\n        __self: this\n      }, React.createElement(\"circle\", {\n        r: 15,\n        fill: \"#fbd24b\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229\n        },\n        __self: this\n      })), node.depth !== 0 && React.createElement(Popover, {\n        placement: \"rightTop\",\n        content: React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 237\n          },\n          __self: this\n        }, React.createElement(PopoverNode, {\n          name: \"Vertical icon\",\n          className: \"tab-vertical\",\n          retrieveTask: retrieveTask,\n          node: node,\n          update: forceUpdate,\n          deleteTask: deleteTask,\n          task_details: task_details,\n          newtaskChange: newtaskChange,\n          newPriority: newPriority,\n          newStatus: newStatus,\n          addTaskToParent: addTaskToParent,\n          account_users: account_users,\n          type: \"sub\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 238\n          },\n          __self: this\n        })),\n        trigger: \"click\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237\n        },\n        __self: this\n      }, React.createElement(\"rect\", {\n        height: height,\n        width: width,\n        y: -height / 2,\n        x: -width / 2,\n        fill: '#fffdf4',\n        stroke: node.data.children.length < 1 ? '#fffdf4' : '#fffdf4',\n        strokeWidth: 1,\n        strokeDasharray: node.data.children.length < 1 ? '2,2' : '0',\n        strokeOpacity: node.data.children.length < 1 ? 0.6 : 1,\n        rx: !node.data.children.length < 1 ? 4 : 10,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255\n        },\n        __self: this\n      })), React.createElement(\"text\", {\n        dy: '.33em',\n        fontSize: 20,\n        fontFamily: \"FontAwesome\",\n        textAnchor: 'middle',\n        style: {\n          pointerEvents: 'none'\n        },\n        fill: node.depth === 0 ? '#000' : node.children ? '#000' : '#000',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 271\n        },\n        __self: this\n      }, node.data.task_title));\n    })))));\n  }))));\n};\n\nexport default connect(store => ({\n  theme: store.theme.currentTheme\n}))(ProjectGramBig);","map":{"version":3,"sources":["/Users/johnvehr/Builder/kuuik/octoe_web/src/pages/hub/projectGramBig.js"],"names":["React","Line","connect","PopoverNode","Badge","Card","CardBody","CardHeader","CardTitle","Tooltip","Popover","Popconfirm","Message","Button","Drawer","Form","Input","Item","Icon","Menu","Progress","Group","Tree","LinearGradient","Zoom","localPoint","scaleLinear","hierarchy","pointRadial","RectClipPath","LinkHorizontal","LinkVertical","LinkRadial","LinkHorizontalStep","LinkVerticalStep","LinkRadialStep","LinkHorizontalCurve","LinkVerticalCurve","LinkRadialCurve","LinkHorizontalLine","LinkVerticalLine","LinkRadialLine","ProjectGramBig","changeTranslate","retrieveTask","deleteTask","newStatus","task_details","newtaskChange","newPriority","addTaskToParent","account_users","forceUpdate","data","state","props","theme","console","log","width","height","margin","top","left","right","bottom","innerWidth","innerHeight","layout","orientation","linkType","stepPercent","origin","sizeWidth","sizeHeight","x","y","Math","PI","min","initialTransform","zoom","cursor","isDragging","handleWheel","dragStart","dragMove","dragEnd","toString","d","isExpanded","children","a","b","parent","depth","links","map","link","i","LinkComponent","target","descendants","node","key","radialX","radialY","length","pointerEvents","task_title","store","currentTheme"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport { connect } from \"react-redux\";\nimport PopoverNode from './popoverNode'\nimport { Badge, Card, CardBody, CardHeader, CardTitle } from \"reactstrap\";\nimport {\n  Tooltip,\n  Popover,\n  Popconfirm,\n  Message,\n  Button,\n  Drawer,\n  Form,\n  Input,\n  Item,\n  Icon,\n  Menu,\n  Progress\n} from 'antd'\nimport { Group } from '@vx/group';\nimport { Tree } from '@vx/hierarchy';\nimport { LinearGradient } from '@vx/gradient';\nimport {Zoom} from '@vx/zoom'\nimport {localPoint} from '@vx/event'\nimport {scaleLinear} from '@vx/scale'\nimport { hierarchy } from 'd3-hierarchy';\nimport { pointRadial } from 'd3-shape';\nimport { RectClipPath } from '@vx/clip-path';\nimport {\n  LinkHorizontal,\n  LinkVertical,\n  LinkRadial,\n  LinkHorizontalStep,\n  LinkVerticalStep,\n  LinkRadialStep,\n  LinkHorizontalCurve,\n  LinkVerticalCurve,\n  LinkRadialCurve,\n  LinkHorizontalLine,\n  LinkVerticalLine,\n  LinkRadialLine\n} from '@vx/shape';\n\nconst ProjectGramBig = ({\n  changeTranslate,\n  retrieveTask,\n  deleteTask,\n  newStatus,\n  task_details,\n  newtaskChange,\n  newPriority,\n  addTaskToParent,\n  account_users,\n  forceUpdate,\n  data,\n  state, props, theme }) => {\n  console.log(props)\n  console.log(account_users)\n  const {\n    width = 700,\n    height = 400,\n    margin = {\n      top: 10,\n      left: 10,\n      right: 10,\n      bottom: 10\n    }\n  } = props;\n  const innerWidth = width - margin.left - margin.right;\n  const innerHeight = height - margin.top - margin.bottom;\n  const { layout, orientation, linkType, stepPercent } = state;\n  let origin;\n  let sizeWidth;\n  let sizeHeight;\n  if (state.layout === 'polar') {\n    origin = {\n      x: innerWidth / 2,\n      y: innerHeight / 2\n    };\n    sizeWidth = 2 * Math.PI;\n    sizeHeight = Math.min(innerWidth, innerHeight) / 2;\n  } else {\n    origin = { x: 0, y: 0 };\n    if (orientation === 'vertical') {\n      sizeWidth = innerWidth;\n      sizeHeight = innerHeight;\n    } else {\n      sizeWidth = innerHeight;\n      sizeHeight = innerWidth;\n    }\n  }\n\n  return (\n    <Card className=\"flex-fill w-100\">\n      <CardHeader>\n        <Badge color=\"primary\" className=\"float-right\">\n          Overview\n        </Badge>\n        <CardTitle tag=\"h5\" className=\"mb-0\">\n          SpidaGram\n        </CardTitle>\n      </CardHeader>\n      <CardBody>\n        <div className=\"chart chart-lg\">\n        <Zoom\n          width={width}\n          height={height}\n          scaleXMin={1 / 2}\n          scaleXMax={4}\n          scaleYMin={1 / 2}\n          scaleYMax={4}\n          transformMatrix={state.initialTransform}\n        >\n        {zoom => {\n          return(\n            <svg width={width} height={height} style={{ cursor: zoom.isDragging ? 'grabbing' : 'grab' }}>\n              <RectClipPath id=\"zoom-clip\" width={800} height={800} />\n              <LinearGradient  id=\"lg\" from=\"#fd9b93\" to=\"#fe6e9e\" />\n              <rect onWheel={zoom.handleWheel}\n                      onMouseDown={zoom.dragStart}\n                      onMouseMove={zoom.dragMove}\n                      onMouseUp={zoom.dragEnd}\n                      onMouseLeave={() => {\n                        if (!zoom.isDragging) return;\n                        zoom.dragEnd();\n                      }} width={width} height={height} rx={14} fill=\"#f3f0e3\" />\n\n              <Group transform={zoom.toString()} top={margin.top} left={margin.left}>\n                <Tree\n                  root={hierarchy(data, d => (d.isExpanded ? null : d.children))}\n                  size={[sizeWidth, sizeHeight]}\n                  separation={(a, b) => (a.parent == b.parent ? 1 : 0.5) / a.depth}\n\n                >\n                  {data => (\n                    <Group top={origin.y} left={origin.x}>\n                      {data.links().map((link, i) => {\n                        let LinkComponent;\n\n                        if (layout === 'polar') {\n                          if (linkType === 'step') {\n                            LinkComponent = LinkRadialStep;\n                          } else if (linkType === 'curve') {\n                            LinkComponent = LinkRadialCurve;\n                          } else if (linkType === 'line') {\n                            LinkComponent = LinkRadialLine;\n                          } else {\n                            LinkComponent = LinkRadial;\n                          }\n                        } else {\n                          if (orientation === 'vertical') {\n                            if (linkType === 'step') {\n                              LinkComponent = LinkVerticalStep;\n                            } else if (linkType === 'curve') {\n                              LinkComponent = LinkVerticalCurve;\n                            } else if (linkType === 'line') {\n                              LinkComponent = LinkVerticalLine;\n                            } else {\n                              LinkComponent = LinkVertical;\n                            }\n                          } else {\n                            if (linkType === 'step') {\n                              LinkComponent = LinkHorizontalStep;\n                            } else if (linkType === 'curve') {\n                              LinkComponent = LinkHorizontalCurve;\n                            } else if (linkType === 'line') {\n                              LinkComponent = LinkHorizontalLine;\n                            } else {\n                              LinkComponent = LinkHorizontal;\n                            }\n                          }\n                        }\n\n                        return (\n                          <LinkComponent\n                            data={link}\n                            percent={+stepPercent}\n                            stroke={link.target.children ? '#153d8f' : '#eee'}\n                            strokeWidth=\"1\"\n                            fill=\"none\"\n                            key={i}\n                            onClick={() => console.log(link)}\n                          />\n                        );\n                      })}\n\n                      {data.descendants().map((node, key) => {\n                        const width = 140;\n                        const height = 50;\n\n                        let top;\n                        let left;\n                        if (layout === 'polar') {\n                          const [radialX, radialY] = pointRadial(node.x, node.y);\n                          top = radialY;\n                          left = radialX;\n                        } else {\n                          if (orientation === 'vertical') {\n                            top = node.y;\n                            left = node.x;\n                          } else {\n                            top = node.x;\n                            left = node.y;\n                          }\n                        }\n\n                        return (\n\n                          <Group top={top} left={left} key={key}>\n                            {node.depth === 0 && (\n                                <Popover placement=\"rightTop\" content={(<div>\n                                  <PopoverNode\n                                    name=\"Vertical icon\"\n                                    className=\"tab-vertical\"\n                                    retrieveTask={retrieveTask}\n                                    node={node}\n                                    update={forceUpdate}\n                                    deleteTask={deleteTask}\n                                    task_details={task_details}\n                                    newtaskChange={newtaskChange}\n                                    newPriority={newPriority}\n                                    newStatus={newStatus}\n                                    addTaskToParent={addTaskToParent}\n                                    account_users={account_users}\n                                    type='root'\n\n                                  />\n                                  </div>)} trigger=\"click\">\n                              <circle\n                                r={15}\n                                fill=\"#fbd24b\"\n\n                              />\n                              </Popover>\n                            )}\n                            {node.depth !== 0 && (\n                              <Popover placement=\"rightTop\" content={(<div>\n                                <PopoverNode\n                                  name=\"Vertical icon\"\n                                  className=\"tab-vertical\"\n                                  retrieveTask={retrieveTask}\n                                  node={node}\n                                  update={forceUpdate}\n                                  deleteTask={deleteTask}\n                                  task_details={task_details}\n                                  newtaskChange={newtaskChange}\n                                  newPriority={newPriority}\n                                  newStatus={newStatus}\n                                  addTaskToParent={addTaskToParent}\n                                  account_users={account_users}\n                                  type='sub'\n\n                                />\n                              </div>)} trigger=\"click\">\n                              <rect\n                                height={height}\n                                width={width}\n                                y={-height / 2}\n                                x={-width / 2}\n                                fill={'#fffdf4'}\n                                stroke={node.data.children.length < 1 ? '#fffdf4' : '#fffdf4'}\n                                strokeWidth={1}\n                                strokeDasharray={node.data.children.length < 1 ? '2,2' : '0'}\n                                strokeOpacity={node.data.children.length < 1 ? 0.6 : 1}\n                                rx={!node.data.children.length < 1 ? 4 : 10}\n\n\n                              />\n                              </Popover>\n                            )}\n                            <text\n                              dy={'.33em'}\n                              fontSize={20}\n                              fontFamily=\"FontAwesome\"\n                              textAnchor={'middle'}\n                              style={{ pointerEvents: 'none' }}\n                              fill={node.depth === 0 ? '#000' : node.children ? '#000' : '#000'}\n                            >\n                              {node.data.task_title}\n                            </text>\n                          </Group>\n\n                        );\n                      })}\n                    </Group>\n\n                  )}\n                </Tree>\n              </Group>\n            </svg>\n          )\n        }}\n\n            </Zoom>\n        </div>\n      </CardBody>\n    </Card>\n  );\n};\n\nexport default connect(store => ({\n  theme: store.theme.currentTheme\n}))(ProjectGramBig);\n"]},"metadata":{},"sourceType":"module"}