{"ast":null,"code":"import * as types from \"../constants\";\nimport userApi from '../api/userApi';\nexport function signUp(usr) {\n  return function (dispatch) {\n    return userApi.signupUser(usr).then(user => {\n      dispatch({\n        type: types.SIGN_UP,\n        payload: user\n      });\n    }).catch(error => {\n      throw error;\n    });\n  };\n}\nexport function signOut(callbackRedirect) {\n  return function (dispatch) {\n    return userApi.signOutUser().then(user => {\n      dispatch({\n        type: types.SIGN_OUT,\n        payload: user\n      });\n    }).then(user => callbackRedirect(user)).catch(error => {\n      throw error;\n    });\n  };\n}\nexport function retrieveUserAccount(subdomain) {\n  return function (dispatch) {\n    return userApi.retrieveAccount(subdomain).then(user => {\n      dispatch({\n        type: types.RETRIEVE_USER_ACCOUNT,\n        payload: user\n      });\n    }).catch(error => {\n      throw error;\n    });\n  };\n}","map":{"version":3,"sources":["/Users/johnvehr/Builder/kuuik/octoe_web/src/redux/actions/userActions.js"],"names":["types","userApi","signUp","usr","dispatch","signupUser","then","user","type","SIGN_UP","payload","catch","error","signOut","callbackRedirect","signOutUser","SIGN_OUT","retrieveUserAccount","subdomain","retrieveAccount","RETRIEVE_USER_ACCOUNT"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,cAAvB;AAEA,OAAOC,OAAP,MAAoB,gBAApB;AAEA,OAAO,SAASC,MAAT,CAAgBC,GAAhB,EAAoB;AACzB,SAAO,UAASC,QAAT,EAAkB;AACvB,WAAOH,OAAO,CAACI,UAAR,CAAmBF,GAAnB,EAAwBG,IAAxB,CAA6BC,IAAI,IAAI;AAC1CH,MAAAA,QAAQ,CAAC;AACPI,QAAAA,IAAI,EAAER,KAAK,CAACS,OADL;AAEPC,QAAAA,OAAO,EAAEH;AAFF,OAAD,CAAR;AAID,KALM,EAKJI,KALI,CAKEC,KAAK,IAAI;AAChB,YAAMA,KAAN;AACD,KAPM,CAAP;AAQD,GATD;AAUD;AAED,OAAO,SAASC,OAAT,CAAiBC,gBAAjB,EAAkC;AACvC,SAAO,UAASV,QAAT,EAAkB;AACvB,WAAOH,OAAO,CAACc,WAAR,GAAsBT,IAAtB,CAA2BC,IAAI,IAAI;AACxCH,MAAAA,QAAQ,CAAC;AACPI,QAAAA,IAAI,EAAER,KAAK,CAACgB,QADL;AAEPN,QAAAA,OAAO,EAAEH;AAFF,OAAD,CAAR;AAID,KALM,EAMND,IANM,CAMDC,IAAI,IAAIO,gBAAgB,CAACP,IAAD,CANvB,EAONI,KAPM,CAOAC,KAAK,IAAI;AACd,YAAMA,KAAN;AACD,KATM,CAAP;AAUD,GAXD;AAYD;AAED,OAAO,SAASK,mBAAT,CAA6BC,SAA7B,EAAuC;AAC5C,SAAO,UAASd,QAAT,EAAkB;AACvB,WAAOH,OAAO,CAACkB,eAAR,CAAwBD,SAAxB,EAAmCZ,IAAnC,CAAwCC,IAAI,IAAI;AACrDH,MAAAA,QAAQ,CAAC;AACPI,QAAAA,IAAI,EAAER,KAAK,CAACoB,qBADL;AAEPV,QAAAA,OAAO,EAAEH;AAFF,OAAD,CAAR;AAID,KALM,EAKJI,KALI,CAKEC,KAAK,IAAI;AAChB,YAAMA,KAAN;AACD,KAPM,CAAP;AAQD,GATD;AAUD","sourcesContent":["import * as types from \"../constants\";\n\nimport userApi from '../api/userApi'\n\nexport function signUp(usr){\n  return function(dispatch){\n    return userApi.signupUser(usr).then(user => {\n      dispatch({\n        type: types.SIGN_UP,\n        payload: user\n      })\n    }).catch(error => {\n      throw(error)\n    })\n  }\n}\n\nexport function signOut(callbackRedirect){\n  return function(dispatch){\n    return userApi.signOutUser().then(user => {\n      dispatch({\n        type: types.SIGN_OUT,\n        payload: user\n      })\n    })\n    .then(user => callbackRedirect(user))\n    .catch(error => {\n      throw(error)\n    })\n  }\n}\n\nexport function retrieveUserAccount(subdomain){\n  return function(dispatch){\n    return userApi.retrieveAccount(subdomain).then(user => {\n      dispatch({\n        type: types.RETRIEVE_USER_ACCOUNT,\n        payload: user\n      })\n    }).catch(error => {\n      throw(error)\n    })\n  }\n}\n"]},"metadata":{},"sourceType":"module"}