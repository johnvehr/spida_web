{"ast":null,"code":"import React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport { Group } from '@vx/group';\nimport { pack as d3pack } from 'd3-hierarchy';\nimport DefaultNode from '../HierarchyDefaultNode';\nPack.propTypes = {\n  root: PropTypes.object.isRequired,\n  children: PropTypes.func,\n  top: PropTypes.number,\n  left: PropTypes.number,\n  className: PropTypes.string,\n  radius: PropTypes.func,\n  size: PropTypes.arrayOf(PropTypes.number),\n  padding: PropTypes.number,\n  nodeComponent: PropTypes.any\n};\nexport default function Pack(_ref) {\n  var top = _ref.top,\n      left = _ref.left,\n      className = _ref.className,\n      root = _ref.root,\n      radius = _ref.radius,\n      size = _ref.size,\n      padding = _ref.padding,\n      children = _ref.children,\n      _ref$nodeComponent = _ref.nodeComponent,\n      nodeComponent = _ref$nodeComponent === void 0 ? DefaultNode : _ref$nodeComponent;\n  var pack = d3pack();\n  if (size) pack.size(size);\n  if (radius !== undefined) pack.radius(radius);\n  if (padding) pack.padding(padding);\n  var data = pack(root);\n  if (children) return children(data);\n  return React.createElement(Group, {\n    top: top,\n    left: left,\n    className: cx('vx-pack', className)\n  }, nodeComponent && data.descendants().map(function (node, i) {\n    return React.createElement(Group, {\n      key: \"pack-node-\" + i\n    }, React.createElement(nodeComponent, {\n      node: node\n    }));\n  }));\n}","map":null,"metadata":{},"sourceType":"module"}