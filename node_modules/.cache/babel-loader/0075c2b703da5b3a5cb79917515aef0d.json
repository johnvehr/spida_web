{"ast":null,"code":"import Auth from '../../auth';\nimport { currEnv } from './apiConfig';\nconst api = `api/v1`;\n\nconst genHeaders = type => {\n  return {\n    method: `${type}`,\n    headers: Auth.fetchToken()\n  };\n};\n\nclass projectApi {\n  static projectApiGen(resource, param_line, type, obj = {}) {\n    return fetch(`${currEnv}/${api}/${resource}/${param_line}`, genHeaders(type)).then(response => response.json()).catch(error => {\n      return error;\n    });\n  }\n\n  static createNewProject(project, subdomain) {\n    return fetch(`http://localhost:3001/api/v1/projects?subdomain=${subdomain}`, {\n      method: 'POST',\n      headers: Auth.fetchToken(),\n      body: JSON.stringify(project)\n    }).then(response => {\n      return response.json();\n    }).catch(error => {\n      return error;\n    });\n  }\n\n  static deleteProject(id) {\n    return fetch(`http://localhost:3001/api/v1/projects/${id}`, {\n      method: 'DELETE',\n      headers: Auth.fetchToken()\n    }).then(response => {\n      return response.json();\n    }).catch(error => {\n      return error;\n    });\n  }\n\n  static retrieveProject(id, subdomain) {\n    return fetch(`http://localhost:3001/api/v1/projects/${id.id}?subdomain=${subdomain}`, {\n      method: 'GET',\n      headers: Auth.fetchToken()\n    }).then(response => {\n      return response.json();\n    }).catch(error => {\n      return error;\n    });\n  }\n\n}\n\nexport default projectApi;","map":{"version":3,"sources":["/Users/johnvehr/Builder/kuuik/octoe_web/src/redux/api/projectApi.js"],"names":["Auth","currEnv","api","genHeaders","type","method","headers","fetchToken","projectApi","projectApiGen","resource","param_line","obj","fetch","then","response","json","catch","error","createNewProject","project","subdomain","body","JSON","stringify","deleteProject","id","retrieveProject"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,YAAjB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AAEA,MAAMC,GAAG,GAAI,QAAb;;AAEA,MAAMC,UAAU,GAAIC,IAAD,IAAU;AAC3B,SAAO;AACLC,IAAAA,MAAM,EAAG,GAAED,IAAK,EADX;AAELE,IAAAA,OAAO,EAAEN,IAAI,CAACO,UAAL;AAFJ,GAAP;AAID,CALD;;AAOA,MAAMC,UAAN,CAAiB;AAEf,SAAOC,aAAP,CAAsBC,QAAtB,EAAgCC,UAAhC,EAA4CP,IAA5C,EAAkDQ,GAAG,GAAC,EAAtD,EAAyD;AACvD,WAAOC,KAAK,CAAE,GAAEZ,OAAQ,IAAGC,GAAI,IAAGQ,QAAS,IAAGC,UAAW,EAA7C,EAA+CR,UAAU,CAACC,IAAD,CAAzD,CAAL,CACNU,IADM,CACDC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADX,EAENC,KAFM,CAEAC,KAAK,IAAI;AACd,aAAOA,KAAP;AACD,KAJM,CAAP;AAKD;;AAED,SAAOC,gBAAP,CAAwBC,OAAxB,EAAgCC,SAAhC,EAA0C;AACxC,WAAOR,KAAK,CAAE,mDAAkDQ,SAAU,EAA9D,EAAgE;AAC1EhB,MAAAA,MAAM,EAAE,MADkE;AAE1EC,MAAAA,OAAO,EAAEN,IAAI,CAACO,UAAL,EAFiE;AAG1Ee,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeJ,OAAf;AAHoE,KAAhE,CAAL,CAIJN,IAJI,CAICC,QAAQ,IAAI;AAClB,aAAOA,QAAQ,CAACC,IAAT,EAAP;AACD,KANM,EAMJC,KANI,CAMEC,KAAK,IAAI;AAChB,aAAOA,KAAP;AACD,KARM,CAAP;AASD;;AAED,SAAOO,aAAP,CAAqBC,EAArB,EAAwB;AACtB,WAAOb,KAAK,CAAE,yCAAwCa,EAAG,EAA7C,EAAgD;AAC1DrB,MAAAA,MAAM,EAAE,QADkD;AAE1DC,MAAAA,OAAO,EAAEN,IAAI,CAACO,UAAL;AAFiD,KAAhD,CAAL,CAGJO,IAHI,CAGCC,QAAQ,IAAI;AAClB,aAAOA,QAAQ,CAACC,IAAT,EAAP;AACD,KALM,EAKJC,KALI,CAKEC,KAAK,IAAI;AAChB,aAAOA,KAAP;AACD,KAPM,CAAP;AAQD;;AAED,SAAOS,eAAP,CAAuBD,EAAvB,EAA0BL,SAA1B,EAAoC;AAClC,WAAOR,KAAK,CAAE,yCAAwCa,EAAE,CAACA,EAAG,cAAaL,SAAU,EAAvE,EAA0E;AACpFhB,MAAAA,MAAM,EAAE,KAD4E;AAEpFC,MAAAA,OAAO,EAAEN,IAAI,CAACO,UAAL;AAF2E,KAA1E,CAAL,CAGJO,IAHI,CAGCC,QAAQ,IAAI;AAClB,aAAOA,QAAQ,CAACC,IAAT,EAAP;AACD,KALM,EAKJC,KALI,CAKEC,KAAK,IAAI;AAChB,aAAOA,KAAP;AACD,KAPM,CAAP;AAQD;;AA1Cc;;AA8CjB,eAAeV,UAAf","sourcesContent":["import Auth from '../../auth'\nimport {currEnv} from './apiConfig'\n\nconst api = `api/v1`\n\nconst genHeaders = (type) => {\n  return {\n    method: `${type}`,\n    headers: Auth.fetchToken()\n  }\n}\n\nclass projectApi {\n\n  static projectApiGen (resource, param_line, type, obj={}){\n    return fetch(`${currEnv}/${api}/${resource}/${param_line}`,genHeaders(type))\n    .then(response => response.json())\n    .catch(error => {\n      return error;\n    })\n  }\n\n  static createNewProject(project,subdomain){\n    return fetch(`http://localhost:3001/api/v1/projects?subdomain=${subdomain}`,{\n      method: 'POST',\n      headers: Auth.fetchToken(),\n      body: JSON.stringify(project)\n    }).then(response => {\n      return response.json();\n    }).catch(error => {\n      return error;\n    });\n  }\n\n  static deleteProject(id){\n    return fetch(`http://localhost:3001/api/v1/projects/${id}`, {\n      method: 'DELETE',\n      headers: Auth.fetchToken()\n    }).then(response => {\n      return response.json()\n    }).catch(error => {\n      return error;\n    })\n  }\n\n  static retrieveProject(id,subdomain){\n    return fetch(`http://localhost:3001/api/v1/projects/${id.id}?subdomain=${subdomain}`, {\n      method: 'GET',\n      headers: Auth.fetchToken()\n    }).then(response => {\n      return response.json()\n    }).catch(error => {\n      return error;\n    })\n  }\n\n}\n\nexport default projectApi\n"]},"metadata":{},"sourceType":"module"}