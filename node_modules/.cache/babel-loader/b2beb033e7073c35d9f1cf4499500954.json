{"ast":null,"code":"import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport logger from 'redux-logger';\nimport user from '../reducers/authReducer';\nimport sidebar from '../reducers/sidebarReducers';\nimport layout from '../reducers/layoutReducer';\nimport appReducer from '../reducers/index'; // the value from combineReducers\n\nimport { persistStore, persistReducer } from 'redux-persist';\nimport autoMergeLevel2 from 'redux-persist/lib/stateReconciler/autoMergeLevel2';\nimport storage from 'redux-persist/lib/storage'; // defaults to localStorage for web\n//import {SIGN_OUT} from './actions/actionTypes';\n// Middleware: Redux Persist Config\n\nconst persistConfig = {\n  // Root\n  key: 'root',\n  // Storage Method (React Native)\n  storage: storage,\n  stateReconciler: autoMergeLevel2,\n  blacklist: ['user', 'sidebar', 'layout'] // Whitelist (Save Specific Reducers)\n\n}; // Middleware: Redux Persist Persisted Reducer\n\nconst rootReducer = (state, action) => {\n  //if ( action.type === SIGN_OUT ) {\n  //  storage.removeItem('persist:root')\n  //  state = undefined;\n  //}\n  return appReducer(state, action);\n};\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer); // Redux: Store\n\nconst store = createStore(persistedReducer, applyMiddleware(thunk, logger)); // Middleware: Redux Persist Persister\n\nlet persistor = persistStore(store); // Exports\n\nexport { store, persistor };","map":{"version":3,"sources":["/Users/johnvehr/Builder/kuuik/octoe_web/src/redux/store/index.js"],"names":["createStore","applyMiddleware","thunk","logger","user","sidebar","layout","appReducer","persistStore","persistReducer","autoMergeLevel2","storage","persistConfig","key","stateReconciler","blacklist","rootReducer","state","action","persistedReducer","store","persistor"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,IAAP,MAAiB,yBAAjB;AACA,OAAOC,OAAP,MAAoB,6BAApB;AACA,OAAOC,MAAP,MAAmB,2BAAnB;AACA,OAAOC,UAAP,MAAuB,mBAAvB,C,CAA4C;;AAC5C,SAASC,YAAT,EAAuBC,cAAvB,QAA6C,eAA7C;AACA,OAAOC,eAAP,MAA4B,mDAA5B;AACA,OAAOC,OAAP,MAAoB,2BAApB,C,CAAgD;AAChD;AAEA;;AACA,MAAMC,aAAa,GAAG;AACpB;AACAC,EAAAA,GAAG,EAAE,MAFe;AAGpB;AACAF,EAAAA,OAAO,EAAEA,OAJW;AAKpBG,EAAAA,eAAe,EAAEJ,eALG;AAMpBK,EAAAA,SAAS,EAAE,CAAC,MAAD,EAAQ,SAAR,EAAkB,QAAlB,CANS,CAOpB;;AAPoB,CAAtB,C,CASA;;AAEA,MAAMC,WAAW,GAAG,CAAEC,KAAF,EAASC,MAAT,KAAqB;AACvC;AACA;AACA;AACA;AAEA,SAAOX,UAAU,CAACU,KAAD,EAAQC,MAAR,CAAjB;AACD,CAPD;;AASA,MAAMC,gBAAgB,GAAGV,cAAc,CAACG,aAAD,EAAgBI,WAAhB,CAAvC,C,CACA;;AACA,MAAMI,KAAK,GAAGpB,WAAW,CACvBmB,gBADuB,EAEvBlB,eAAe,CAACC,KAAD,EAAOC,MAAP,CAFQ,CAAzB,C,CAIA;;AACA,IAAIkB,SAAS,GAAGb,YAAY,CAACY,KAAD,CAA5B,C,CACA;;AACA,SACEA,KADF,EAEEC,SAFF","sourcesContent":["import { createStore, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport logger from 'redux-logger'\r\nimport user from '../reducers/authReducer'\r\nimport sidebar from '../reducers/sidebarReducers'\r\nimport layout from '../reducers/layoutReducer'\r\nimport appReducer from '../reducers/index'; // the value from combineReducers\r\nimport { persistStore, persistReducer } from 'redux-persist';\r\nimport autoMergeLevel2 from 'redux-persist/lib/stateReconciler/autoMergeLevel2';\r\nimport storage from 'redux-persist/lib/storage' // defaults to localStorage for web\r\n//import {SIGN_OUT} from './actions/actionTypes';\r\n\r\n// Middleware: Redux Persist Config\r\nconst persistConfig = {\r\n  // Root\r\n  key: 'root',\r\n  // Storage Method (React Native)\r\n  storage: storage,\r\n  stateReconciler: autoMergeLevel2,\r\n  blacklist: ['user','sidebar','layout']\r\n  // Whitelist (Save Specific Reducers)\r\n};\r\n// Middleware: Redux Persist Persisted Reducer\r\n\r\nconst rootReducer = ( state, action ) => {\r\n  //if ( action.type === SIGN_OUT ) {\r\n  //  storage.removeItem('persist:root')\r\n  //  state = undefined;\r\n  //}\r\n\r\n  return appReducer(state, action)\r\n}\r\n\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\r\n// Redux: Store\r\nconst store = createStore(\r\n  persistedReducer,\r\n  applyMiddleware(thunk,logger),\r\n);\r\n// Middleware: Redux Persist Persister\r\nlet persistor = persistStore(store);\r\n// Exports\r\nexport {\r\n  store,\r\n  persistor,\r\n};\r\n"]},"metadata":{},"sourceType":"module"}