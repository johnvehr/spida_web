{"ast":null,"code":"import _objectSpread from \"/Users/johnvehr/Builder/kuuik/octoe_web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport * as types from \"../constants\";\nconst initialState = {\n  tasks: [],\n  task: {},\n  fetched_tasks: false\n};\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case types.GET_PROJECT_TASKS:\n      return _objectSpread({}, state, {\n        tasks: action.payload,\n        fetched_tasks: true\n      });\n\n    case types.ADD_TASK:\n      const new_payload = _objectSpread({}, action.payload, {\n        children: []\n      });\n\n      if (action.payload.ancestry != null) {\n        const parent_count = action.payload.ancestry.split('/').length - 1;\n        const parent = action.payload.ancestry.split('/')[parent_count];\n\n        const findMyChild = arr => {\n          arr.map(a => {\n            const new_a = _objectSpread({}, a);\n\n            if (new_a.id == parent) {\n              return new_a.children.push(new_payload);\n            }\n\n            if (new_a['children']) findMyChild(new_a['children']);\n          });\n          return arr;\n        };\n\n        return _objectSpread({}, state, {\n          tasks: _objectSpread({}, state.tasks, {\n            children: findMyChild([...state.tasks.children])\n          })\n        });\n      } else {\n        return _objectSpread({}, state, {\n          tasks: _objectSpread({}, state.tasks, {\n            children: [...state.tasks.children, new_payload]\n          })\n        });\n      }\n\n      break;\n\n    case types.DELETE_TASK:\n      console.log(action.payload);\n\n    /*\n        const new_payload = {\n          ...action.payload,\n          children: []\n        }\n    \n          if(action.payload.ancestry != null){\n            const parent_count = action.payload.ancestry.split('/').length - 1\n            const parent = action.payload.ancestry.split('/')[parent_count]\n            const findMyChild = (arr) => {\n              arr.map(a => {\n                const new_a = {...a}\n                if(new_a.id == parent){\n                  const indexOfTaskToDelete = new_a.findIndex(task => {return task.id == action.task.id})\n                  return new_a.children.push(new_payload)\n                }\n                if(new_a['children']) findMyChild(new_a['children'])\n    \n              })\n              return arr\n            }\n    \n            return {\n              ...state,\n              tasks: {\n                ...state.tasks,\n                children: findMyChild([...state.tasks.children])\n    \n              }\n            }\n          }else {\n            return {\n              ...state,\n              tasks: {\n                ...state.tasks,\n                children: [\n                  ...state.tasks.children,\n                  new_payload\n                ]\n              }\n            }\n          }\n          */\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/johnvehr/Builder/kuuik/octoe_web/src/redux/reducers/taskReducer.js"],"names":["types","initialState","tasks","task","fetched_tasks","state","action","type","GET_PROJECT_TASKS","payload","ADD_TASK","new_payload","children","ancestry","parent_count","split","length","parent","findMyChild","arr","map","a","new_a","id","push","DELETE_TASK","console","log"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,cAAvB;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAE,EADY;AAEnBC,EAAAA,IAAI,EAAE,EAFa;AAGnBC,EAAAA,aAAa,EAAE;AAHI,CAArB;AAMA,eAAe,UAASC,KAAK,GAAGJ,YAAjB,EAA8BK,MAA9B,EAAqC;AAClD,UAAOA,MAAM,CAACC,IAAd;AACE,SAAKP,KAAK,CAACQ,iBAAX;AACE,+BACKH,KADL;AAEEH,QAAAA,KAAK,EAAEI,MAAM,CAACG,OAFhB;AAGEL,QAAAA,aAAa,EAAE;AAHjB;;AAKF,SAAKJ,KAAK,CAACU,QAAX;AAEA,YAAMC,WAAW,qBACZL,MAAM,CAACG,OADK;AAEfG,QAAAA,QAAQ,EAAE;AAFK,QAAjB;;AAKE,UAAGN,MAAM,CAACG,OAAP,CAAeI,QAAf,IAA2B,IAA9B,EAAmC;AACjC,cAAMC,YAAY,GAAGR,MAAM,CAACG,OAAP,CAAeI,QAAf,CAAwBE,KAAxB,CAA8B,GAA9B,EAAmCC,MAAnC,GAA4C,CAAjE;AACA,cAAMC,MAAM,GAAGX,MAAM,CAACG,OAAP,CAAeI,QAAf,CAAwBE,KAAxB,CAA8B,GAA9B,EAAmCD,YAAnC,CAAf;;AACA,cAAMI,WAAW,GAAIC,GAAD,IAAS;AAC3BA,UAAAA,GAAG,CAACC,GAAJ,CAAQC,CAAC,IAAI;AACX,kBAAMC,KAAK,qBAAOD,CAAP,CAAX;;AACA,gBAAGC,KAAK,CAACC,EAAN,IAAYN,MAAf,EAAsB;AACpB,qBAAOK,KAAK,CAACV,QAAN,CAAeY,IAAf,CAAoBb,WAApB,CAAP;AACD;;AACD,gBAAGW,KAAK,CAAC,UAAD,CAAR,EAAsBJ,WAAW,CAACI,KAAK,CAAC,UAAD,CAAN,CAAX;AAEvB,WAPD;AAQA,iBAAOH,GAAP;AACD,SAVD;;AAYA,iCACKd,KADL;AAEEH,UAAAA,KAAK,oBACAG,KAAK,CAACH,KADN;AAEHU,YAAAA,QAAQ,EAAEM,WAAW,CAAC,CAAC,GAAGb,KAAK,CAACH,KAAN,CAAYU,QAAhB,CAAD;AAFlB;AAFP;AAQD,OAvBD,MAuBM;AACJ,iCACKP,KADL;AAEEH,UAAAA,KAAK,oBACAG,KAAK,CAACH,KADN;AAEHU,YAAAA,QAAQ,EAAE,CACR,GAAGP,KAAK,CAACH,KAAN,CAAYU,QADP,EAERD,WAFQ;AAFP;AAFP;AAUD;;AACD;;AACF,SAAMX,KAAK,CAACyB,WAAZ;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYrB,MAAM,CAACG,OAAnB;;AACJ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8CI;AACE,aAAOJ,KAAP;AAnGJ;AAqGD","sourcesContent":["import * as types from \"../constants\";\n\nconst initialState = {\n  tasks: [],\n  task: {},\n  fetched_tasks: false\n}\n\nexport default function(state = initialState,action){\n  switch(action.type){\n    case types.GET_PROJECT_TASKS:\n      return {\n        ...state,\n        tasks: action.payload,\n        fetched_tasks: true\n      }\n    case types.ADD_TASK:\n\n    const new_payload = {\n      ...action.payload,\n      children: []\n    }\n\n      if(action.payload.ancestry != null){\n        const parent_count = action.payload.ancestry.split('/').length - 1\n        const parent = action.payload.ancestry.split('/')[parent_count]\n        const findMyChild = (arr) => {\n          arr.map(a => {\n            const new_a = {...a}\n            if(new_a.id == parent){\n              return new_a.children.push(new_payload)\n            }\n            if(new_a['children']) findMyChild(new_a['children'])\n\n          })\n          return arr\n        }\n\n        return {\n          ...state,\n          tasks: {\n            ...state.tasks,\n            children: findMyChild([...state.tasks.children])\n\n          }\n        }\n      }else {\n        return {\n          ...state,\n          tasks: {\n            ...state.tasks,\n            children: [\n              ...state.tasks.children,\n              new_payload\n            ]\n          }\n        }\n      }\n      break;\n    case  types.DELETE_TASK:\n    console.log(action.payload)\n/*\n    const new_payload = {\n      ...action.payload,\n      children: []\n    }\n\n      if(action.payload.ancestry != null){\n        const parent_count = action.payload.ancestry.split('/').length - 1\n        const parent = action.payload.ancestry.split('/')[parent_count]\n        const findMyChild = (arr) => {\n          arr.map(a => {\n            const new_a = {...a}\n            if(new_a.id == parent){\n              const indexOfTaskToDelete = new_a.findIndex(task => {return task.id == action.task.id})\n              return new_a.children.push(new_payload)\n            }\n            if(new_a['children']) findMyChild(new_a['children'])\n\n          })\n          return arr\n        }\n\n        return {\n          ...state,\n          tasks: {\n            ...state.tasks,\n            children: findMyChild([...state.tasks.children])\n\n          }\n        }\n      }else {\n        return {\n          ...state,\n          tasks: {\n            ...state.tasks,\n            children: [\n              ...state.tasks.children,\n              new_payload\n            ]\n          }\n        }\n      }\n      */\n\n\n\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}