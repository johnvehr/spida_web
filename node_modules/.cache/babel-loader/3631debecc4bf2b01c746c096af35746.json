{"ast":null,"code":"var _jsxFileName = \"/Users/johnvehr/Builder/kuuik/octoe_web/src/pages/hub/newProjectForm.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { connect } from 'react-redux';\nimport { Row, Col } from 'reactstrap';\nimport { Button, Input, Form, Item, Icon, Switch, Select, DatePicker, Upload, Avatar } from 'antd';\nimport { withRouter } from 'react-router-dom';\nimport * as projectActions from '../../redux/actions/projectActions';\nimport { bindActionCreators } from 'redux';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlus, faMinus } from \"@fortawesome/free-solid-svg-icons\";\nimport { Editor, EditorState } from 'draft-js';\n\nclass NewProject extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.fileChange = value => {\n      console.log(value);\n    };\n\n    this.newProjectManagerChange = value => {\n      this.setState({\n        project_manager: value\n      });\n    };\n\n    this.newProjectTeamChange = value => {\n      this.setState({\n        project_team: value\n      });\n      console.log(this.state.project_team);\n    };\n\n    this.newProjectChange = input => e => {\n      const name = e.target.name;\n      this.setState({\n        [name]: e.target.value\n      });\n    };\n\n    this.state = {\n      project_title: '',\n      project_manager: '',\n      project_team: [],\n      project_desc: '',\n      files: [],\n      project_active: true,\n      editorState: EditorState.createEmpty()\n    };\n    this.newProjectChange = this.newProjectChange.bind(this);\n    this.switchChange = this.switchChange.bind(this);\n    this._createProject = this._createProject.bind(this);\n    this.newProjectManagerChange = this.newProjectManagerChange.bind(this);\n    this.newProjectTeamChange = this.newProjectTeamChange.bind(this);\n  }\n\n  _createProject(e) {\n    e.preventDefault();\n    this.props.actions.createProject(this.state, this.props.subdomain);\n    this.setState({\n      project_title: '',\n      project_desc: '',\n      project_active: true\n    });\n  }\n\n  switchChange() {\n    this.setState(prevState => ({\n      project_active: !prevState.project_active\n    }));\n  }\n\n  render() {\n    const Option = Select.Option;\n    const RangePicker = DatePicker.RangePicker;\n    const Dragger = Upload.Dragger;\n    console.log(this.state.active);\n    return React.createElement(Form, {\n      className: \"newprojectForm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(Col, {\n      md: \"4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(Form.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(Input, {\n      prefix: React.createElement(Icon, {\n        type: \"form\",\n        style: {\n          color: 'rgba(0,0,0,.25)'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }),\n      name: \"project_title\",\n      value: this.state.project_title,\n      onChange: this.newProjectChange(this.state.project_title),\n      placeholder: \"Project Title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    })), React.createElement(Form.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(Select, {\n      placeholder: \"Project Manager\",\n      onChange: this.newProjectManagerChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, this.props.account_users ? this.props.account_users.map(au => React.createElement(Option, {\n      key: au.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, au.email)) : React.createElement(Option, {\n      value: \"no team\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, \"No team members\"))), React.createElement(Form.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(Select, {\n      mode: \"tags\",\n      style: {\n        width: '100%'\n      },\n      placeholder: \"Select Team\",\n      onChange: this.newProjectTeamChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, this.props.account_users ? this.props.account_users.map(au => React.createElement(Option, {\n      key: au.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, au.email)) : React.createElement(Option, {\n      value: \"no team\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, \"No team members\"))), React.createElement(Form.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, React.createElement(RangePicker, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }))), React.createElement(Col, {\n      md: \"4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, React.createElement(Form.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, React.createElement(Editor, {\n      editorState: this.state.editorState,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }), React.createElement(Input, {\n      prefix: React.createElement(Icon, {\n        type: \"form\",\n        style: {\n          color: 'rgba(0,0,0,.25)'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }),\n      name: \"project_desc\",\n      value: this.state.project_desc,\n      onChange: this.newProjectChange(this.state.project_desc),\n      placeholder: \"Give us more\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }))), React.createElement(Col, {\n      md: \"4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, React.createElement(Form.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, React.createElement(Switch, {\n      defaultChecked: true,\n      checkedChildren: \"Active\",\n      unCheckedChildren: \"Inactive\",\n      onClick: this.switchChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    })), React.createElement(Form.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, React.createElement(Upload.Dragger, {\n      name: \"files\",\n      action: \"https://www.mocky.io/v2/5cc8019d300000980a055e76\",\n      multiple: true,\n      onChange: this.fileChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"ant-upload-drag-icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      type: \"inbox\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    })), React.createElement(\"p\", {\n      className: \"ant-upload-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, \"Click or drag file to this area to upload\"), React.createElement(\"p\", {\n      className: \"ant-upload-hint\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, \"Support for a single or bulk upload.\"))), React.createElement(Form.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: this._createProject,\n      type: \"primary\",\n      htmlType: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, React.createElement(FontAwesomeIcon, {\n      icon: faPlus,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }))))));\n  }\n\n}\n\nconst mapStateToProps = (state, props) => ({\n  project: state.projects\n});\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    actions: bindActionCreators(projectActions, dispatch)\n  };\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(NewProject));","map":{"version":3,"sources":["/Users/johnvehr/Builder/kuuik/octoe_web/src/pages/hub/newProjectForm.js"],"names":["React","ReactDOM","connect","Row","Col","Button","Input","Form","Item","Icon","Switch","Select","DatePicker","Upload","Avatar","withRouter","projectActions","bindActionCreators","FontAwesomeIcon","faPlus","faMinus","Editor","EditorState","NewProject","Component","constructor","props","fileChange","value","console","log","newProjectManagerChange","setState","project_manager","newProjectTeamChange","project_team","state","newProjectChange","input","e","name","target","project_title","project_desc","files","project_active","editorState","createEmpty","bind","switchChange","_createProject","preventDefault","actions","createProject","subdomain","prevState","render","Option","RangePicker","Dragger","active","color","account_users","map","au","id","email","width","mapStateToProps","project","projects","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react'\nimport ReactDOM from 'react-dom';\nimport {connect} from 'react-redux'\nimport {Row,Col} from 'reactstrap'\nimport {Button,Input,Form,Item,Icon, Switch,Select,DatePicker,Upload,Avatar} from 'antd'\nimport {withRouter} from 'react-router-dom'\nimport * as projectActions from '../../redux/actions/projectActions'\nimport {bindActionCreators} from 'redux';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlus, faMinus } from \"@fortawesome/free-solid-svg-icons\";\nimport {Editor, EditorState} from 'draft-js';\n\nclass NewProject extends React.Component{\n  constructor(props){\n    super(props)\n    this.state = {\n        project_title: '',\n        project_manager: '',\n        project_team: [],\n        project_desc: '',\n        files: [],\n        project_active: true,\n        editorState: EditorState.createEmpty()\n    }\n\n    this.newProjectChange = this.newProjectChange.bind(this)\n    this.switchChange = this.switchChange.bind(this)\n    this._createProject = this._createProject.bind(this)\n    this.newProjectManagerChange = this.newProjectManagerChange.bind(this)\n    this.newProjectTeamChange = this.newProjectTeamChange.bind(this)\n  }\n\n\n  _createProject(e){\n    e.preventDefault()\n    this.props.actions.createProject(this.state,this.props.subdomain)\n    this.setState({\n      project_title: '',\n      project_desc: '',\n      project_active: true\n    })\n  }\n\n  switchChange() {\n    this.setState(prevState => ({\n      project_active: !prevState.project_active\n    }))\n  }\n\n  fileChange = (value) => {\n    console.log(value)\n  }\n\n  newProjectManagerChange = (value) => {\n    this.setState({\n      project_manager: value\n    })\n  }\n\n  newProjectTeamChange = (value) => {\n    this.setState({\n      project_team: value\n    })\n    console.log(this.state.project_team)\n  }\n\n  newProjectChange = input => e => {\n    const name = e.target.name\n    this.setState({\n      [name]: e.target.value\n    })\n  }\n\n  render(){\n    const {Option} = Select\n    const {RangePicker} = DatePicker\n    const { Dragger } = Upload\n    console.log(this.state.active)\n    return(\n      <Form className=\"newprojectForm\">\n      <Row>\n        <Col md=\"4\">\n          <Form.Item>\n            <Input\n              prefix={<Icon type=\"form\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n              name=\"project_title\"\n              value={this.state.project_title}\n              onChange={this.newProjectChange(this.state.project_title)}\n              placeholder=\"Project Title\"\n              />\n          </Form.Item>\n          <Form.Item>\n            <Select placeholder=\"Project Manager\" onChange={this.newProjectManagerChange}>\n              {this.props.account_users ? (\n                this.props.account_users.map((au) => (\n                <Option key={au.id}>{au.email}</Option>\n              ))):(\n                <Option value=\"no team\">No team members</Option>\n              )\n            }\n            </Select>\n          </Form.Item>\n          <Form.Item>\n          <Select mode=\"tags\" style={{ width: '100%' }} placeholder=\"Select Team\" onChange={this.newProjectTeamChange}>\n          {this.props.account_users ? (\n            this.props.account_users.map((au) => (\n            <Option key={au.id}>{au.email}</Option>\n          ))):(\n            <Option value=\"no team\">No team members</Option>\n          )\n        }\n          </Select>\n          </Form.Item>\n          <Form.Item>\n            <RangePicker />\n          </Form.Item>\n\n        </Col>\n        <Col md=\"4\">\n        <Form.Item>\n          <Editor editorState={this.state.editorState} />\n          <Input\n            prefix={<Icon type=\"form\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n            name=\"project_desc\"\n            value={this.state.project_desc}\n            onChange={this.newProjectChange(this.state.project_desc)}\n            placeholder=\"Give us more\"\n            />\n        </Form.Item>\n        </Col>\n        <Col md=\"4\">\n        <Form.Item>\n          <Switch defaultChecked checkedChildren=\"Active\"\n          unCheckedChildren=\"Inactive\" onClick={this.switchChange} />\n        </Form.Item>\n        <Form.Item>\n          <Upload.Dragger name=\"files\" action='https://www.mocky.io/v2/5cc8019d300000980a055e76' multiple={true} onChange={this.fileChange}>\n            <p className=\"ant-upload-drag-icon\">\n              <Icon type=\"inbox\" />\n            </p>\n            <p className=\"ant-upload-text\">Click or drag file to this area to upload</p>\n            <p className=\"ant-upload-hint\">Support for a single or bulk upload.</p>\n          </Upload.Dragger>\n        </Form.Item>\n        <Form.Item>\n          <Button onClick={this._createProject} type=\"primary\" htmlType=\"submit\" >\n          <FontAwesomeIcon icon={faPlus} />\n          </Button>\n        </Form.Item>\n        </Col>\n        </Row>\n    </Form>\n    )\n  }\n}\n\n\nconst mapStateToProps = (state,props) => ({\n  project: state.projects\n})\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    actions: bindActionCreators(projectActions, dispatch)\n  };\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(NewProject))\n"]},"metadata":{},"sourceType":"module"}