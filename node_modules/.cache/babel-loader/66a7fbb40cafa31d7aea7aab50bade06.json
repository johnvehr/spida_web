{"ast":null,"code":"import Auth from '../../auth';\nimport { currEnv } from './apiConfig';\nconst api = `api/v1`;\n\nclass projectApi {\n  static genProjectConfig(resource, param_line, type) {\n    switch (type) {\n      case 'GET':\n        return `${currEnv}/${api}/${resource}/${param_line}`, {\n          method: 'GET',\n          headers: Auth.fetchToken()\n        };\n    }\n  }\n\n  static getProjects(subdomain) {\n    this.genProjectConfig('projects', `?subdomain=${subdomain}`, 'GET').then(response => response.json()).catch(error => {\n      return error;\n    });\n  }\n\n  static createNewProject(project, subdomain) {\n    return fetch(`http://localhost:3001/api/v1/projects?subdomain=${subdomain}`, {\n      method: 'POST',\n      headers: Auth.fetchToken(),\n      body: JSON.stringify(project)\n    }).then(response => {\n      return response.json();\n    }).catch(error => {\n      return error;\n    });\n  }\n\n  static deleteProject(id) {\n    return fetch(`http://localhost:3001/api/v1/projects/${id}`, {\n      method: 'DELETE',\n      headers: Auth.fetchToken()\n    }).then(response => {\n      return response.json();\n    }).catch(error => {\n      return error;\n    });\n  }\n\n  static retrieveProject(id, subdomain) {\n    return fetch(`http://localhost:3001/api/v1/projects/${id.id}?subdomain=${subdomain}`, {\n      method: 'GET',\n      headers: Auth.fetchToken()\n    }).then(response => {\n      return response.json();\n    }).catch(error => {\n      return error;\n    });\n  }\n\n}\n\nexport default projectApi;","map":{"version":3,"sources":["/Users/johnvehr/Builder/kuuik/octoe_web/src/redux/api/projectApi.js"],"names":["Auth","currEnv","api","projectApi","genProjectConfig","resource","param_line","type","method","headers","fetchToken","getProjects","subdomain","then","response","json","catch","error","createNewProject","project","fetch","body","JSON","stringify","deleteProject","id","retrieveProject"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,YAAjB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AAEA,MAAMC,GAAG,GAAI,QAAb;;AAEA,MAAMC,UAAN,CAAiB;AAGf,SAAOC,gBAAP,CAAyBC,QAAzB,EAAmCC,UAAnC,EAA+CC,IAA/C,EAAoD;AAGhD,YAAOA,IAAP;AACE,WAAK,KAAL;AACA,eAAS,GAAEN,OAAQ,IAAGC,GAAI,IAAGG,QAAS,IAAGC,UAAW,EAA5C,EAA8C;AACpDE,UAAAA,MAAM,EAAE,KAD4C;AAEpDC,UAAAA,OAAO,EAAET,IAAI,CAACU,UAAL;AAF2C,SAAtD;AAFF;AAUH;;AAED,SAAOC,WAAP,CAAmBC,SAAnB,EAA6B;AAC3B,SAAKR,gBAAL,CAAsB,UAAtB,EAAkC,cAAaQ,SAAU,EAAzD,EAA2D,KAA3D,EACCC,IADD,CACMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADlB,EAECC,KAFD,CAEOC,KAAK,IAAI;AACd,aAAOA,KAAP;AACD,KAJD;AAKD;;AAED,SAAOC,gBAAP,CAAwBC,OAAxB,EAAgCP,SAAhC,EAA0C;AACxC,WAAOQ,KAAK,CAAE,mDAAkDR,SAAU,EAA9D,EAAgE;AAC1EJ,MAAAA,MAAM,EAAE,MADkE;AAE1EC,MAAAA,OAAO,EAAET,IAAI,CAACU,UAAL,EAFiE;AAG1EW,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeJ,OAAf;AAHoE,KAAhE,CAAL,CAIJN,IAJI,CAICC,QAAQ,IAAI;AAClB,aAAOA,QAAQ,CAACC,IAAT,EAAP;AACD,KANM,EAMJC,KANI,CAMEC,KAAK,IAAI;AAChB,aAAOA,KAAP;AACD,KARM,CAAP;AASD;;AAED,SAAOO,aAAP,CAAqBC,EAArB,EAAwB;AACtB,WAAOL,KAAK,CAAE,yCAAwCK,EAAG,EAA7C,EAAgD;AAC1DjB,MAAAA,MAAM,EAAE,QADkD;AAE1DC,MAAAA,OAAO,EAAET,IAAI,CAACU,UAAL;AAFiD,KAAhD,CAAL,CAGJG,IAHI,CAGCC,QAAQ,IAAI;AAClB,aAAOA,QAAQ,CAACC,IAAT,EAAP;AACD,KALM,EAKJC,KALI,CAKEC,KAAK,IAAI;AAChB,aAAOA,KAAP;AACD,KAPM,CAAP;AAQD;;AAED,SAAOS,eAAP,CAAuBD,EAAvB,EAA0Bb,SAA1B,EAAoC;AAClC,WAAOQ,KAAK,CAAE,yCAAwCK,EAAE,CAACA,EAAG,cAAab,SAAU,EAAvE,EAA0E;AACpFJ,MAAAA,MAAM,EAAE,KAD4E;AAEpFC,MAAAA,OAAO,EAAET,IAAI,CAACU,UAAL;AAF2E,KAA1E,CAAL,CAGJG,IAHI,CAGCC,QAAQ,IAAI;AAClB,aAAOA,QAAQ,CAACC,IAAT,EAAP;AACD,KALM,EAKJC,KALI,CAKEC,KAAK,IAAI;AAChB,aAAOA,KAAP;AACD,KAPM,CAAP;AAQD;;AA1Dc;;AA8DjB,eAAed,UAAf","sourcesContent":["import Auth from '../../auth'\nimport {currEnv} from './apiConfig'\n\nconst api = `api/v1`\n\nclass projectApi {\n\n\n  static genProjectConfig (resource, param_line, type){\n\n\n      switch(type){\n        case 'GET':\n        return (`${currEnv}/${api}/${resource}/${param_line}`,{\n          method: 'GET',\n          headers: Auth.fetchToken()\n        })\n\n      }\n\n\n  }\n\n  static getProjects(subdomain){\n    this.genProjectConfig('projects',`?subdomain=${subdomain}`,'GET')\n    .then(response => response.json())\n    .catch(error => {\n      return error;\n    })\n  }\n\n  static createNewProject(project,subdomain){\n    return fetch(`http://localhost:3001/api/v1/projects?subdomain=${subdomain}`,{\n      method: 'POST',\n      headers: Auth.fetchToken(),\n      body: JSON.stringify(project)\n    }).then(response => {\n      return response.json();\n    }).catch(error => {\n      return error;\n    });\n  }\n\n  static deleteProject(id){\n    return fetch(`http://localhost:3001/api/v1/projects/${id}`, {\n      method: 'DELETE',\n      headers: Auth.fetchToken()\n    }).then(response => {\n      return response.json()\n    }).catch(error => {\n      return error;\n    })\n  }\n\n  static retrieveProject(id,subdomain){\n    return fetch(`http://localhost:3001/api/v1/projects/${id.id}?subdomain=${subdomain}`, {\n      method: 'GET',\n      headers: Auth.fetchToken()\n    }).then(response => {\n      return response.json()\n    }).catch(error => {\n      return error;\n    })\n  }\n\n}\n\nexport default projectApi\n"]},"metadata":{},"sourceType":"module"}