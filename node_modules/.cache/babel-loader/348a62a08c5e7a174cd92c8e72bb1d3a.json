{"ast":null,"code":"import * as types from \"../constants\";\nimport projectApi from '../api/projectApi';\nexport function projects() {\n  return function (dispatch) {\n    return projectApi.getProjects().then(project => {\n      dispatch({\n        type: types.GET_PROJECTS,\n        payload: project\n      });\n    }).catch(error => {\n      throw error;\n    });\n  };\n}\nexport function createProject(project, subdomain) {\n  return function (dispatch) {\n    return projectApi.createNewProject(project, subdomain).then(responseProject => {\n      dispatch({\n        type: types.CREATE_PROJECT,\n        payload: responseProject\n      });\n    }).catch(error => {\n      throw error;\n    });\n  };\n}\nexport function deleteProject(project) {\n  return function (dispatch) {\n    return projectApi.deleteProject(project).then(responseProject => {\n      dispatch({\n        type: types.DELETE_PROJECT,\n        payload: responseProject\n      });\n    }).catch(error => {\n      throw error;\n    });\n  };\n}\nexport function retrieveProject(id) {\n  return function (dispatch) {\n    return projectApi.retrieveProject(id).then(responseProject => {\n      dispatch({\n        type: types.PROJECT_DETAIL,\n        payload: responseProject\n      });\n    }).catch(error => {\n      throw error;\n    });\n  };\n}","map":{"version":3,"sources":["/Users/johnvehr/Builder/kuuik/octoe_web/src/redux/actions/projectActions.js"],"names":["types","projectApi","projects","dispatch","getProjects","then","project","type","GET_PROJECTS","payload","catch","error","createProject","subdomain","createNewProject","responseProject","CREATE_PROJECT","deleteProject","DELETE_PROJECT","retrieveProject","id","PROJECT_DETAIL"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,cAAvB;AACA,OAAOC,UAAP,MAAuB,mBAAvB;AAEA,OAAO,SAASC,QAAT,GAAmB;AACxB,SAAO,UAASC,QAAT,EAAkB;AACvB,WAAOF,UAAU,CAACG,WAAX,GAAyBC,IAAzB,CAA8BC,OAAO,IAAG;AAC7CH,MAAAA,QAAQ,CAAC;AACPI,QAAAA,IAAI,EAAEP,KAAK,CAACQ,YADL;AAEPC,QAAAA,OAAO,EAAEH;AAFF,OAAD,CAAR;AAID,KALM,EAKJI,KALI,CAKEC,KAAK,IAAI;AAChB,YAAMA,KAAN;AACD,KAPM,CAAP;AAQD,GATD;AAUD;AAED,OAAO,SAASC,aAAT,CAAuBN,OAAvB,EAA+BO,SAA/B,EAAyC;AAC9C,SAAO,UAASV,QAAT,EAAkB;AACvB,WAAOF,UAAU,CAACa,gBAAX,CAA4BR,OAA5B,EAAoCO,SAApC,EAA+CR,IAA/C,CAAoDU,eAAe,IAAI;AAC5EZ,MAAAA,QAAQ,CAAC;AACPI,QAAAA,IAAI,EAAEP,KAAK,CAACgB,cADL;AAEPP,QAAAA,OAAO,EAAEM;AAFF,OAAD,CAAR;AAID,KALM,EAKJL,KALI,CAKEC,KAAK,IAAI;AAChB,YAAMA,KAAN;AACD,KAPM,CAAP;AAQD,GATD;AAUD;AAED,OAAO,SAASM,aAAT,CAAuBX,OAAvB,EAA+B;AACpC,SAAO,UAASH,QAAT,EAAkB;AACvB,WAAOF,UAAU,CAACgB,aAAX,CAAyBX,OAAzB,EAAkCD,IAAlC,CAAuCU,eAAe,IAAI;AAC/DZ,MAAAA,QAAQ,CAAC;AACPI,QAAAA,IAAI,EAAEP,KAAK,CAACkB,cADL;AAEPT,QAAAA,OAAO,EAAEM;AAFF,OAAD,CAAR;AAID,KALM,EAKJL,KALI,CAKEC,KAAK,IAAI;AAChB,YAAMA,KAAN;AACD,KAPM,CAAP;AAQD,GATD;AAUD;AAED,OAAO,SAASQ,eAAT,CAAyBC,EAAzB,EAA4B;AACjC,SAAO,UAASjB,QAAT,EAAkB;AACvB,WAAOF,UAAU,CAACkB,eAAX,CAA2BC,EAA3B,EAA+Bf,IAA/B,CAAoCU,eAAe,IAAI;AAC5DZ,MAAAA,QAAQ,CAAC;AACPI,QAAAA,IAAI,EAAEP,KAAK,CAACqB,cADL;AAEPZ,QAAAA,OAAO,EAAEM;AAFF,OAAD,CAAR;AAID,KALM,EAMNL,KANM,CAMAC,KAAK,IAAI;AACd,YAAMA,KAAN;AACD,KARM,CAAP;AASD,GAVD;AAWD","sourcesContent":["import * as types from \"../constants\";\nimport projectApi from '../api/projectApi'\n\nexport function projects(){\n  return function(dispatch){\n    return projectApi.getProjects().then(project =>{\n      dispatch({\n        type: types.GET_PROJECTS,\n        payload: project\n      })\n    }).catch(error => {\n      throw(error)\n    })\n  }\n}\n\nexport function createProject(project,subdomain){\n  return function(dispatch){\n    return projectApi.createNewProject(project,subdomain).then(responseProject => {\n      dispatch({\n        type: types.CREATE_PROJECT,\n        payload: responseProject\n      })\n    }).catch(error => {\n      throw(error)\n    })\n  }\n}\n\nexport function deleteProject(project){\n  return function(dispatch){\n    return projectApi.deleteProject(project).then(responseProject => {\n      dispatch({\n        type: types.DELETE_PROJECT,\n        payload: responseProject\n      })\n    }).catch(error => {\n      throw(error)\n    })\n  }\n}\n\nexport function retrieveProject(id){\n  return function(dispatch){\n    return projectApi.retrieveProject(id).then(responseProject => {\n      dispatch({\n        type: types.PROJECT_DETAIL,\n        payload: responseProject\n      })\n    })\n    .catch(error => {\n      throw(error)\n    })\n  }\n}\n"]},"metadata":{},"sourceType":"module"}