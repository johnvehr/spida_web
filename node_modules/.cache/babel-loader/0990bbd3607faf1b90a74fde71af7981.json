{"ast":null,"code":"import Auth from '../../auth';\nimport { apiEnv } from './apiConfig';\nconst current_env = apiEnv.DEV;\nconst api = `api/v1`;\n\nclass projectApi {\n  static genProjectConfig(resource, param_line) {\n    return `${current_env}/${api}/${resource}/${param_line}`;\n  }\n\n  static getProjects(subdomain) {\n    console.log(\"callded\");\n    return fetch(this.genProjectConfig('projects', `?subdomain=${subdomain}`), {\n      method: \"GET\",\n      headers: Auth.fetchToken()\n    }).then(response => response.json()).catch(error => {\n      return error;\n    });\n  }\n\n  static createNewProject(project, subdomain) {\n    return fetch(`http://localhost:3001/api/v1/projects?subdomain=${subdomain}`, {\n      method: 'POST',\n      headers: Auth.fetchToken(),\n      body: JSON.stringify(project)\n    }).then(response => {\n      return response.json();\n    }).catch(error => {\n      return error;\n    });\n  }\n\n  static deleteProject(id) {\n    return fetch(`http://localhost:3001/api/v1/projects/${id}`, {\n      method: 'DELETE',\n      headers: Auth.fetchToken()\n    }).then(response => {\n      return response.json();\n    }).catch(error => {\n      return error;\n    });\n  }\n\n  static retrieveProject(id, subdomain) {\n    return fetch(`http://localhost:3001/api/v1/projects/${id.id}?subdomain=${subdomain}`, {\n      method: 'GET',\n      headers: Auth.fetchToken()\n    }).then(response => {\n      return response.json();\n    }).catch(error => {\n      return error;\n    });\n  }\n\n}\n\nexport default projectApi;","map":{"version":3,"sources":["/Users/johnvehr/Builder/kuuik/octoe_web/src/redux/api/projectApi.js"],"names":["Auth","apiEnv","current_env","DEV","api","projectApi","genProjectConfig","resource","param_line","getProjects","subdomain","console","log","fetch","method","headers","fetchToken","then","response","json","catch","error","createNewProject","project","body","JSON","stringify","deleteProject","id","retrieveProject"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,YAAjB;AACA,SAAQC,MAAR,QAAqB,aAArB;AAEA,MAAMC,WAAW,GAAGD,MAAM,CAACE,GAA3B;AACA,MAAMC,GAAG,GAAI,QAAb;;AAEA,MAAMC,UAAN,CAAiB;AAEf,SAAOC,gBAAP,CAAyBC,QAAzB,EAAmCC,UAAnC,EAA8C;AAC5C,WAAQ,GAAEN,WAAY,IAAGE,GAAI,IAAGG,QAAS,IAAGC,UAAW,EAAvD;AACD;;AAED,SAAOC,WAAP,CAAmBC,SAAnB,EAA6B;AAC3BC,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACA,WAAOC,KAAK,CAAC,KAAKP,gBAAL,CAAsB,UAAtB,EAAkC,cAAaI,SAAU,EAAzD,CAAD,EAA6D;AACvEI,MAAAA,MAAM,EAAE,KAD+D;AAEvEC,MAAAA,OAAO,EAAEf,IAAI,CAACgB,UAAL;AAF8D,KAA7D,CAAL,CAINC,IAJM,CAIDC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAJX,EAKNC,KALM,CAKAC,KAAK,IAAI;AACd,aAAOA,KAAP;AACD,KAPM,CAAP;AAQD;;AAED,SAAOC,gBAAP,CAAwBC,OAAxB,EAAgCb,SAAhC,EAA0C;AACxC,WAAOG,KAAK,CAAE,mDAAkDH,SAAU,EAA9D,EAAgE;AAC1EI,MAAAA,MAAM,EAAE,MADkE;AAE1EC,MAAAA,OAAO,EAAEf,IAAI,CAACgB,UAAL,EAFiE;AAG1EQ,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeH,OAAf;AAHoE,KAAhE,CAAL,CAIJN,IAJI,CAICC,QAAQ,IAAI;AAClB,aAAOA,QAAQ,CAACC,IAAT,EAAP;AACD,KANM,EAMJC,KANI,CAMEC,KAAK,IAAI;AAChB,aAAOA,KAAP;AACD,KARM,CAAP;AASD;;AAED,SAAOM,aAAP,CAAqBC,EAArB,EAAwB;AACtB,WAAOf,KAAK,CAAE,yCAAwCe,EAAG,EAA7C,EAAgD;AAC1Dd,MAAAA,MAAM,EAAE,QADkD;AAE1DC,MAAAA,OAAO,EAAEf,IAAI,CAACgB,UAAL;AAFiD,KAAhD,CAAL,CAGJC,IAHI,CAGCC,QAAQ,IAAI;AAClB,aAAOA,QAAQ,CAACC,IAAT,EAAP;AACD,KALM,EAKJC,KALI,CAKEC,KAAK,IAAI;AAChB,aAAOA,KAAP;AACD,KAPM,CAAP;AAQD;;AAED,SAAOQ,eAAP,CAAuBD,EAAvB,EAA0BlB,SAA1B,EAAoC;AAClC,WAAOG,KAAK,CAAE,yCAAwCe,EAAE,CAACA,EAAG,cAAalB,SAAU,EAAvE,EAA0E;AACpFI,MAAAA,MAAM,EAAE,KAD4E;AAEpFC,MAAAA,OAAO,EAAEf,IAAI,CAACgB,UAAL;AAF2E,KAA1E,CAAL,CAGJC,IAHI,CAGCC,QAAQ,IAAI;AAClB,aAAOA,QAAQ,CAACC,IAAT,EAAP;AACD,KALM,EAKJC,KALI,CAKEC,KAAK,IAAI;AAChB,aAAOA,KAAP;AACD,KAPM,CAAP;AAQD;;AAlDc;;AAsDjB,eAAehB,UAAf","sourcesContent":["import Auth from '../../auth'\nimport {apiEnv} from './apiConfig'\n\nconst current_env = apiEnv.DEV\nconst api = `api/v1`\n\nclass projectApi {\n\n  static genProjectConfig (resource, param_line){\n    return `${current_env}/${api}/${resource}/${param_line}`\n  }\n\n  static getProjects(subdomain){\n    console.log(\"callded\")\n    return fetch(this.genProjectConfig('projects',`?subdomain=${subdomain}`),{\n      method: \"GET\",\n      headers: Auth.fetchToken()\n    })\n    .then(response => response.json())\n    .catch(error => {\n      return error;\n    })\n  }\n\n  static createNewProject(project,subdomain){\n    return fetch(`http://localhost:3001/api/v1/projects?subdomain=${subdomain}`,{\n      method: 'POST',\n      headers: Auth.fetchToken(),\n      body: JSON.stringify(project)\n    }).then(response => {\n      return response.json();\n    }).catch(error => {\n      return error;\n    });\n  }\n\n  static deleteProject(id){\n    return fetch(`http://localhost:3001/api/v1/projects/${id}`, {\n      method: 'DELETE',\n      headers: Auth.fetchToken()\n    }).then(response => {\n      return response.json()\n    }).catch(error => {\n      return error;\n    })\n  }\n\n  static retrieveProject(id,subdomain){\n    return fetch(`http://localhost:3001/api/v1/projects/${id.id}?subdomain=${subdomain}`, {\n      method: 'GET',\n      headers: Auth.fetchToken()\n    }).then(response => {\n      return response.json()\n    }).catch(error => {\n      return error;\n    })\n  }\n\n}\n\nexport default projectApi\n"]},"metadata":{},"sourceType":"module"}