{"ast":null,"code":"import { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport logger from 'redux-logger';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport autoMergeLevel2 from 'redux-persist/lib/stateReconciler/autoMergeLevel2';\nimport storage from 'redux-persist/lib/storage'; // defaults to localStorage for web\n\nimport appReducer from './reducers/appReducer'; // Middleware: Redux Persist Config\n\nconst persistConfig = {\n  // Root\n  key: 'root',\n  // Storage Method (React Native)\n  storage: storage,\n  stateReconciler: autoMergeLevel2 //blacklist: ['project','task','sidebar','layout']\n  // Whitelist (Save Specific Reducers)\n\n}; // Middleware: Redux Persist Persisted Reducer\n\nconst rootReducer = (state, action) => {\n  /*  if ( action.type === SIGN_OUT ) {\n      storage.removeItem('persist:root')\n      state = undefined;\n    }\n  */\n  return appReducer(state, action);\n};\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer); // Redux: Store\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(persistedReducer, composeEnhancers(applyMiddleware(thunk, logger))); // Middleware: Redux Persist Persister\n\nlet persistor = persistStore(store); // Exports\n\nexport { store, persistor };","map":{"version":3,"sources":["/Users/johnvehr/Builder/kuuik/octoe_web/src/store.js"],"names":["createStore","applyMiddleware","compose","thunk","logger","persistStore","persistReducer","autoMergeLevel2","storage","appReducer","persistConfig","key","stateReconciler","rootReducer","state","action","persistedReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","persistor"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAsCC,OAAtC,QAAqD,OAArD;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,SAASC,YAAT,EAAuBC,cAAvB,QAA6C,eAA7C;AACA,OAAOC,eAAP,MAA4B,mDAA5B;AACA,OAAOC,OAAP,MAAoB,2BAApB,C,CAAgD;;AAEhD,OAAOC,UAAP,MAAuB,uBAAvB,C,CAEA;;AACA,MAAMC,aAAa,GAAG;AACpB;AACAC,EAAAA,GAAG,EAAE,MAFe;AAGpB;AACAH,EAAAA,OAAO,EAAEA,OAJW;AAKpBI,EAAAA,eAAe,EAAEL,eALG,CAMpB;AACA;;AAPoB,CAAtB,C,CASA;;AAEA,MAAMM,WAAW,GAAG,CAAEC,KAAF,EAASC,MAAT,KAAqB;AACzC;;;;;AAKE,SAAON,UAAU,CAACK,KAAD,EAAQC,MAAR,CAAjB;AACD,CAPD;;AASA,MAAMC,gBAAgB,GAAGV,cAAc,CAACI,aAAD,EAAgBG,WAAhB,CAAvC,C,CACA;;AACA,MAAMI,gBAAgB,GAAGC,MAAM,CAACC,oCAAP,IAA+CjB,OAAxE;AACA,MAAMkB,KAAK,GAAGpB,WAAW,CACvBgB,gBADuB,EAEvBC,gBAAgB,CACdhB,eAAe,CAACE,KAAD,EAAOC,MAAP,CADD,CAFO,CAAzB,C,CAOA;;AACA,IAAIiB,SAAS,GAAGhB,YAAY,CAACe,KAAD,CAA5B,C,CACA;;AACA,SACEA,KADF,EAEEC,SAFF","sourcesContent":["import { createStore, applyMiddleware,compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport logger from 'redux-logger'\nimport { persistStore, persistReducer } from 'redux-persist';\nimport autoMergeLevel2 from 'redux-persist/lib/stateReconciler/autoMergeLevel2';\nimport storage from 'redux-persist/lib/storage' // defaults to localStorage for web\n\nimport appReducer from './reducers/appReducer';\n\n// Middleware: Redux Persist Config\nconst persistConfig = {\n  // Root\n  key: 'root',\n  // Storage Method (React Native)\n  storage: storage,\n  stateReconciler: autoMergeLevel2\n  //blacklist: ['project','task','sidebar','layout']\n  // Whitelist (Save Specific Reducers)\n};\n// Middleware: Redux Persist Persisted Reducer\n\nconst rootReducer = ( state, action ) => {\n/*  if ( action.type === SIGN_OUT ) {\n    storage.removeItem('persist:root')\n    state = undefined;\n  }\n*/\n  return appReducer(state, action)\n}\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n// Redux: Store\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(\n  persistedReducer,\n  composeEnhancers(\n    applyMiddleware(thunk,logger)\n  )\n\n);\n// Middleware: Redux Persist Persister\nlet persistor = persistStore(store);\n// Exports\nexport {\n  store,\n  persistor,\n};\n"]},"metadata":{},"sourceType":"module"}