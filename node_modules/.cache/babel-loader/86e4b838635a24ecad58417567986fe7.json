{"ast":null,"code":"var _jsxFileName = \"/Users/johnvehr/Builder/kuuik/octoe_web/src/layouts/Dashboard.js\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { withRouter, useParams } from \"react-router-dom\";\nimport * as userActions from '../redux/actions/userActions';\nimport { bindActionCreators } from 'redux';\nimport { signOut } from '../redux/actions/userActions';\nimport { retrieveUserAccount } from '../redux/actions/userActions';\nimport Wrapper from \"../components/Wrapper\";\nimport Sidebar from \"../components/Sidebar\";\nimport Main from \"../components/Main\";\nimport Navbar from \"../components/Navbar\";\nimport Content from \"../components/Content\";\nimport Footer from \"../components/Footer\";\nimport Settings from \"../components/Settings\";\n\nclass Dashboard extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.processProps = child => {\n      switch (child.type.name) {\n        case 'Hub':\n          return {\n            loggedIn: this.state.loggedIn,\n            user: this.props.user,\n            updateLogged: this.updateLogged\n          };\n      }\n    };\n\n    this.state = {\n      loggedIn: 'yes'\n    };\n    this.sign_out = this.sign_out.bind(this);\n  }\n\n  componentDidMount() {\n    const subdomain = this.props.match.params.subdomain;\n    this.props.retrieveUserAccount(subdomain);\n  }\n\n  redirectResponse(response) {\n    this.props.history.push('/');\n  }\n\n  sign_out(e) {\n    e.preventDefault();\n    this.props.signOut(this.redirectResponse);\n  }\n\n  render() {\n    const childrenWithProps = React.Children.map(this.props.children, child => {\n      return React.cloneElement(child, this.processProps(child));\n    });\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(Wrapper, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(Sidebar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }), React.createElement(Main, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(Navbar, {\n      account: this.props.account,\n      user: this.props.user,\n      sign_Out: this.sign_out,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }), React.createElement(Content, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, childrenWithProps), React.createElement(Footer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }))), React.createElement(Settings, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = (state, props) => ({\n  user: state.user.user,\n  account: state.user.account\n});\n\nexport default withRouter(connect(mapStateToProps, {\n  retrieveUserAccount,\n  signOut\n})(Dashboard));","map":{"version":3,"sources":["/Users/johnvehr/Builder/kuuik/octoe_web/src/layouts/Dashboard.js"],"names":["React","Link","connect","withRouter","useParams","userActions","bindActionCreators","signOut","retrieveUserAccount","Wrapper","Sidebar","Main","Navbar","Content","Footer","Settings","Dashboard","Component","constructor","props","processProps","child","type","name","loggedIn","state","user","updateLogged","sign_out","bind","componentDidMount","subdomain","match","params","redirectResponse","response","history","push","e","preventDefault","render","childrenWithProps","Children","map","children","cloneElement","account","mapStateToProps"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter,useParams } from \"react-router-dom\";\r\n\r\nimport * as userActions from '../redux/actions/userActions'\r\nimport {bindActionCreators} from 'redux'\r\nimport {signOut} from '../redux/actions/userActions'\r\nimport {retrieveUserAccount} from '../redux/actions/userActions'\r\n\r\nimport Wrapper from \"../components/Wrapper\";\r\nimport Sidebar from \"../components/Sidebar\";\r\nimport Main from \"../components/Main\";\r\nimport Navbar from \"../components/Navbar\";\r\nimport Content from \"../components/Content\";\r\nimport Footer from \"../components/Footer\";\r\nimport Settings from \"../components/Settings\";\r\n\r\nclass Dashboard extends React.Component{\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {\r\n      loggedIn: 'yes'\r\n    }\r\n    this.sign_out = this.sign_out.bind(this)\r\n  }\r\n\r\n  componentDidMount(){\r\n    const { subdomain } = this.props.match.params\r\n    this.props.retrieveUserAccount(subdomain)\r\n  }\r\n\r\n  redirectResponse(response){\r\n    this.props.history.push('/')\r\n  }\r\n\r\n  sign_out(e){\r\n    e.preventDefault()\r\n    this.props.signOut(this.redirectResponse)\r\n  }\r\n\r\n  processProps = (child) => {\r\n    switch(child.type.name){\r\n      case 'Hub':\r\n      return {\r\n        loggedIn: this.state.loggedIn,\r\n        user: this.props.user,\r\n        updateLogged: this.updateLogged\r\n      }\r\n    }\r\n  }\r\n\r\n  render(){\r\n\r\n    const childrenWithProps = React.Children.map(this.props.children, child => {\r\n      return React.cloneElement(child, this.processProps(child))\r\n    })\r\n\r\n    return(\r\n      <React.Fragment>\r\n        <Wrapper>\r\n          <Sidebar />\r\n          <Main>\r\n            <Navbar account={this.props.account} user={this.props.user} sign_Out={this.sign_out} />\r\n            <Content>\r\n            {childrenWithProps}\r\n            </Content>\r\n            <Footer />\r\n          </Main>\r\n        </Wrapper>\r\n        <Settings />\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, props) => ({\r\n  user: state.user.user,\r\n  account: state.user.account\r\n});\r\n\r\nexport default withRouter(\r\n  connect(\r\n    mapStateToProps,\r\n    {retrieveUserAccount,signOut}\r\n  )(Dashboard)\r\n);\r\n"]},"metadata":{},"sourceType":"module"}