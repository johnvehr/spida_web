{"ast":null,"code":"import * as types from \"../constants\";\nimport userApi from '../api/userApi';\nexport function signUp(usr, subscription_type, callbackRedirect) {\n  return function (dispatch) {\n    dispatch({\n      type: types.SIGN_UP_PENDING\n    });\n    return userApi.signupUser(usr, subscription_type).then(user => {\n      dispatch({\n        type: types.SIGN_UP,\n        payload: user\n      });\n    }).then(user => callbackRedirect(user)).catch(error => {\n      dispatch({\n        type: types.SIGN_UP_ERROR,\n        payload: error\n      });\n    });\n  };\n}\nexport function signOut() {\n  return function (dispatch) {\n    return userApi.signOutUser().then(user => {\n      dispatch({\n        type: types.SIGN_OUT,\n        payload: user\n      });\n    }).catch(error => {\n      throw error;\n    });\n  };\n}\nexport function signIn(user) {\n  return function (dispatch) {\n    return userApi.signInUser(user).then(usr => {\n      dispatch({\n        type: types.SIGN_IN,\n        payload: usr\n      });\n    }).catch(error => {\n      throw error;\n    });\n  };\n}\nexport function retrieveUserAccount(subdomain) {\n  return function (dispatch) {\n    return userApi.retrieveAccount(subdomain).then(user => {\n      dispatch({\n        type: types.RETRIEVE_USER_ACCOUNT,\n        payload: user\n      });\n    }).catch(error => {\n      throw error;\n    });\n  };\n}\nexport function sendInvite(invite, subdomain) {\n  return function (dispatch) {\n    return userApi.sendInvite(invite, subdomain).then(invt => {\n      dispatch({\n        type: types.SEND_INVITE,\n        payload: invt\n      });\n    }).catch(error => {\n      throw error;\n    });\n  };\n}\nexport function teamSignUp(team_user_params, invite, callbackRedirect) {\n  return function (dispatch) {\n    return userApi.teamSignUp(team_user_params, invite).then(team => {\n      dispatch({\n        type: types.TEAM_SIGN_UP,\n        payload: team\n      });\n    }).then(team => callbackRedirect(team)).catch(error => {\n      throw error;\n    });\n  };\n}","map":{"version":3,"sources":["/Users/johnvehr/Builder/kuuik/octoe_web/src/redux/actions/userActions.js"],"names":["types","userApi","signUp","usr","subscription_type","callbackRedirect","dispatch","type","SIGN_UP_PENDING","signupUser","then","user","SIGN_UP","payload","catch","error","SIGN_UP_ERROR","signOut","signOutUser","SIGN_OUT","signIn","signInUser","SIGN_IN","retrieveUserAccount","subdomain","retrieveAccount","RETRIEVE_USER_ACCOUNT","sendInvite","invite","invt","SEND_INVITE","teamSignUp","team_user_params","team","TEAM_SIGN_UP"],"mappings":"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","sourcesContent":["import * as types from \"../constants\";\n\nimport userApi from '../api/userApi'\n\nexport function signUp(usr,subscription_type,callbackRedirect){\n  return function(dispatch){\n    dispatch({type: types.SIGN_UP_PENDING})\n    return userApi.signupUser(usr,subscription_type).then(user => {\n      dispatch({\n        type: types.SIGN_UP,\n        payload: user\n      })\n    })\n    .then(user => callbackRedirect(user))\n    .catch(error => {\n      dispatch({\n        type: types.SIGN_UP_ERROR,\n        payload: error\n      })\n    })\n  }\n}\n\nexport function signOut(){\n  return function(dispatch){\n    return userApi.signOutUser().then(user => {\n      dispatch({\n        type: types.SIGN_OUT,\n        payload: user\n      })\n    })\n    .catch(error => {\n      throw(error)\n    })\n  }\n}\n\nexport function signIn(user){\n  return function(dispatch){\n    return userApi.signInUser(user).then(usr => {\n      dispatch({\n        type: types.SIGN_IN,\n        payload: usr\n      })\n    })\n    .catch(error => {\n      throw(error)\n    })\n  }\n}\n\nexport function retrieveUserAccount(subdomain){\n  return function(dispatch){\n    return userApi.retrieveAccount(subdomain).then(user => {\n      dispatch({\n        type: types.RETRIEVE_USER_ACCOUNT,\n        payload: user\n      })\n    }).catch(error => {\n      throw(error)\n    })\n  }\n}\n\nexport function sendInvite(invite,subdomain){\n  return function(dispatch){\n    return userApi.sendInvite(invite,subdomain).then(invt => {\n      dispatch({\n        type: types.SEND_INVITE,\n        payload: invt\n      })\n    }).catch(error => {\n      throw(error)\n    })\n  }\n}\n\nexport function teamSignUp(team_user_params,invite,callbackRedirect){\n  return function(dispatch){\n    return userApi.teamSignUp(team_user_params,invite).then(team => {\n      dispatch({\n        type: types.TEAM_SIGN_UP,\n        payload: team\n      })\n    })\n    .then(team => callbackRedirect(team))\n    .catch(error => {\n      throw(error)\n    })\n  }\n}\n"]},"metadata":{},"sourceType":"module"}