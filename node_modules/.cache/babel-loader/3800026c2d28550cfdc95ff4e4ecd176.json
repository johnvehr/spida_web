{"ast":null,"code":"import _objectSpread from \"/Users/johnvehr/Builder/kuuik/octoe_web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport * as types from \"../constants\";\nimport Auth from \"../../auth\";\nconst initialState = {\n  user: {},\n  account: {},\n  account_subscription: {},\n  account_owner: false,\n  account_users: [],\n  accounts: [],\n  pending_invites: [],\n  pending: false,\n  logged_in: !!Auth.isUserAuthenticated()\n};\nexport default function reducer(state = initialState, action) {\n  switch (action.type) {\n    case types.SIGN_UP_PENDING:\n      return _objectSpread({}, state, {\n        pending: true\n      });\n      break;\n\n    case types.SIGN_UP:\n      Auth.processHead(action, action.type);\n      return _objectSpread({}, state, {\n        user: action.payload.json.user,\n        account: action.payload.json.account,\n        pending: false,\n        logged_in: !!Auth.isUserAuthenticated()\n      });\n      break;\n\n    case types.SIGN_UP_ERROR:\n      return _objectSpread({}, state, {\n        pending: false,\n        error: action.error\n      });\n      break;\n\n    case types.SIGN_OUT:\n      Auth.processHead(action, action.type);\n      return {\n        user: {},\n        account: {},\n        logged_in: !!Auth.isUserAuthenticated()\n      };\n      break;\n\n    case types.SIGN_IN:\n      Auth.processHead(action, action.type);\n      return _objectSpread({}, state, {\n        user: action.payload.json.user,\n        account: action.payload.json.account,\n        accounts: action.payload.json.accounts,\n        logged_in: !!Auth.isUserAuthenticated()\n      });\n      break;\n\n    case types.RETRIEVE_USER_ACCOUNT:\n      if (action.payload.account_owner) {\n        return _objectSpread({}, state, {\n          user: action.payload.user,\n          account: action.payload.account,\n          account_users: action.payload.account_users,\n          account_owner: action.payload.account_owner,\n          account_subscription: action.payload.account_subscription\n        });\n      } else {\n        return _objectSpread({}, state, {\n          user: action.payload.user,\n          account: action.payload.account,\n          account_users: action.payload.account_users,\n          account_owner: action.payload.account_owner\n        });\n      }\n\n      break;\n\n    case types.SEND_INVITE:\n      return _objectSpread({}, state, {\n        pending_invites: [...state.pending_invites, action.payload.pending_invites]\n      });\n      break;\n\n    case types.TEAM_SIGN_UP:\n      Auth.processHead(action, action.type);\n      return _objectSpread({}, state, {\n        user: action.payload.json.user,\n        accounts: action.payload.json.accounts,\n        pending: false,\n        logged_in: !!Auth.isUserAuthenticated()\n      });\n      break;\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/johnvehr/Builder/kuuik/octoe_web/src/redux/reducers/authReducer.js"],"names":["types","Auth","initialState","user","account","account_subscription","account_owner","account_users","accounts","pending_invites","pending","logged_in","isUserAuthenticated","reducer","state","action","type","SIGN_UP_PENDING","SIGN_UP","processHead","payload","json","SIGN_UP_ERROR","error","SIGN_OUT","SIGN_IN","RETRIEVE_USER_ACCOUNT","SEND_INVITE","TEAM_SIGN_UP"],"mappings":"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","sourcesContent":["import * as types from \"../constants\";\nimport Auth from \"../../auth\"\n\nconst initialState = {\n  user: {},\n  account: {},\n  account_subscription: {},\n  account_owner: false,\n  account_users: [],\n  accounts: [],\n  pending_invites: [],\n  pending: false,\n  logged_in: !!Auth.isUserAuthenticated()\n};\n\n\nexport default function reducer(state = initialState, action) {\n  switch (action.type) {\n\n    case types.SIGN_UP_PENDING:\n    return {\n      ...state,\n      pending: true\n    }\n    break;\n    case types.SIGN_UP:\n    Auth.processHead(action,action.type)\n      return {\n        ...state,\n        user: action.payload.json.user,\n        account: action.payload.json.account,\n        pending: false,\n        logged_in: !!Auth.isUserAuthenticated()\n      }\n    break;\n    case types.SIGN_UP_ERROR:\n    return {\n      ...state,\n      pending: false,\n      error: action.error\n    }\n    break;\n    case types.SIGN_OUT:\n    Auth.processHead(action,action.type)\n    return {\n      user: {},\n      account: {},\n      logged_in: !!Auth.isUserAuthenticated()\n    }\n    break;\n    case types.SIGN_IN:\n    Auth.processHead(action,action.type)\n    return{\n      ...state,\n      user: action.payload.json.user,\n      account: action.payload.json.account,\n      accounts: action.payload.json.accounts,\n      logged_in: !!Auth.isUserAuthenticated()\n    }\n    break;\n    case types.RETRIEVE_USER_ACCOUNT:\n      if(action.payload.account_owner){\n        return {\n          ...state,\n          user: action.payload.user,\n          account: action.payload.account,\n          account_users: action.payload.account_users,\n          account_owner: action.payload.account_owner,\n          account_subscription: action.payload.account_subscription\n        }\n      }else {\n        return {\n          ...state,\n          user: action.payload.user,\n          account: action.payload.account,\n          account_users: action.payload.account_users,\n          account_owner: action.payload.account_owner\n        }\n      }\n\n    break;\n    case types.SEND_INVITE:\n      return {\n        ...state,\n        pending_invites: [\n          ...state.pending_invites,\n          action.payload.pending_invites\n        ]\n      }\n    break;\n    case types.TEAM_SIGN_UP:\n    Auth.processHead(action,action.type)\n      return {\n        ...state,\n        user: action.payload.json.user,\n        accounts: action.payload.json.accounts,\n        pending: false,\n        logged_in: !!Auth.isUserAuthenticated()\n      }\n    break;\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}