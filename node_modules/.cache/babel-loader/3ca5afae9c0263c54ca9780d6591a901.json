{"ast":null,"code":"import * as types from \"../constants\";\nimport projectApi from '../api/projectApi';\nexport const fetchProjects = query => ({\n  type: types.GET_PROJECTS,\n  payload: project\n});\nexport function projects(subdomain) {\n  return function (dispatch) {\n    return projectApi.getProjects(subdomain).then(project => {\n      dispatch({\n        type: types.GET_PROJECTS,\n        payload: project\n      });\n    }).catch(error => {\n      dispatch({\n        type: types.GET_PROJECTS_FAIL,\n        payload: error\n      });\n    });\n  };\n}\nexport function createProject(project, subdomain) {\n  return function (dispatch) {\n    return projectApi.createNewProject(project, subdomain).then(responseProject => {\n      dispatch({\n        type: types.CREATE_PROJECT,\n        payload: responseProject\n      });\n    }).catch(error => {\n      throw error;\n    });\n  };\n}\nexport function deleteProject(project) {\n  return function (dispatch) {\n    return projectApi.deleteProject(project).then(responseProject => {\n      dispatch({\n        type: types.DELETE_PROJECT,\n        payload: responseProject\n      });\n    }).catch(error => {\n      throw error;\n    });\n  };\n}\nexport function retrieveProject(id) {\n  return function (dispatch) {\n    return projectApi.retrieveProject(id).then(responseProject => {\n      dispatch({\n        type: types.PROJECT_DETAIL,\n        payload: responseProject\n      });\n    }).catch(error => {\n      throw error;\n    });\n  };\n}","map":{"version":3,"sources":["/Users/johnvehr/Builder/kuuik/octoe_web/src/redux/actions/projectActions.js"],"names":["types","projectApi","fetchProjects","query","type","GET_PROJECTS","payload","project","projects","subdomain","dispatch","getProjects","then","catch","error","GET_PROJECTS_FAIL","createProject","createNewProject","responseProject","CREATE_PROJECT","deleteProject","DELETE_PROJECT","retrieveProject","id","PROJECT_DETAIL"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,cAAvB;AACA,OAAOC,UAAP,MAAuB,mBAAvB;AAEA,OAAO,MAAMC,aAAa,GAAIC,KAAD,KAAY;AACvCC,EAAAA,IAAI,EAAEJ,KAAK,CAACK,YAD2B;AAEvCC,EAAAA,OAAO,EAAEC;AAF8B,CAAZ,CAAtB;AAKP,OAAO,SAASC,QAAT,CAAkBC,SAAlB,EAA4B;AACjC,SAAO,UAASC,QAAT,EAAkB;AACvB,WAAOT,UAAU,CAACU,WAAX,CAAuBF,SAAvB,EACNG,IADM,CACDL,OAAO,IAAG;AACdG,MAAAA,QAAQ,CAAC;AACPN,QAAAA,IAAI,EAAEJ,KAAK,CAACK,YADL;AAEPC,QAAAA,OAAO,EAAEC;AAFF,OAAD,CAAR;AAID,KANM,EAONM,KAPM,CAOAC,KAAK,IAAI;AAACJ,MAAAA,QAAQ,CAAC;AACxBN,QAAAA,IAAI,EAAEJ,KAAK,CAACe,iBADY;AAExBT,QAAAA,OAAO,EAAEQ;AAFe,OAAD,CAAR;AAGd,KAVI,CAAP;AAWD,GAZD;AAaD;AAED,OAAO,SAASE,aAAT,CAAuBT,OAAvB,EAA+BE,SAA/B,EAAyC;AAC9C,SAAO,UAASC,QAAT,EAAkB;AACvB,WAAOT,UAAU,CAACgB,gBAAX,CAA4BV,OAA5B,EAAoCE,SAApC,EAA+CG,IAA/C,CAAoDM,eAAe,IAAI;AAC5ER,MAAAA,QAAQ,CAAC;AACPN,QAAAA,IAAI,EAAEJ,KAAK,CAACmB,cADL;AAEPb,QAAAA,OAAO,EAAEY;AAFF,OAAD,CAAR;AAID,KALM,EAKJL,KALI,CAKEC,KAAK,IAAI;AAChB,YAAMA,KAAN;AACD,KAPM,CAAP;AAQD,GATD;AAUD;AAED,OAAO,SAASM,aAAT,CAAuBb,OAAvB,EAA+B;AACpC,SAAO,UAASG,QAAT,EAAkB;AACvB,WAAOT,UAAU,CAACmB,aAAX,CAAyBb,OAAzB,EAAkCK,IAAlC,CAAuCM,eAAe,IAAI;AAC/DR,MAAAA,QAAQ,CAAC;AACPN,QAAAA,IAAI,EAAEJ,KAAK,CAACqB,cADL;AAEPf,QAAAA,OAAO,EAAEY;AAFF,OAAD,CAAR;AAID,KALM,EAKJL,KALI,CAKEC,KAAK,IAAI;AAChB,YAAMA,KAAN;AACD,KAPM,CAAP;AAQD,GATD;AAUD;AAED,OAAO,SAASQ,eAAT,CAAyBC,EAAzB,EAA4B;AACjC,SAAO,UAASb,QAAT,EAAkB;AACvB,WAAOT,UAAU,CAACqB,eAAX,CAA2BC,EAA3B,EAA+BX,IAA/B,CAAoCM,eAAe,IAAI;AAC5DR,MAAAA,QAAQ,CAAC;AACPN,QAAAA,IAAI,EAAEJ,KAAK,CAACwB,cADL;AAEPlB,QAAAA,OAAO,EAAEY;AAFF,OAAD,CAAR;AAID,KALM,EAMNL,KANM,CAMAC,KAAK,IAAI;AACd,YAAMA,KAAN;AACD,KARM,CAAP;AASD,GAVD;AAWD","sourcesContent":["import * as types from \"../constants\";\nimport projectApi from '../api/projectApi'\n\nexport const fetchProjects = (query) => ({\n  type: types.GET_PROJECTS,\n  payload: project\n})\n\nexport function projects(subdomain){\n  return function(dispatch){\n    return projectApi.getProjects(subdomain)\n    .then(project =>{\n      dispatch({\n        type: types.GET_PROJECTS,\n        payload: project\n      })\n    })\n    .catch(error => {dispatch({\n      type: types.GET_PROJECTS_FAIL,\n      payload: error\n    })})\n  }\n}\n\nexport function createProject(project,subdomain){\n  return function(dispatch){\n    return projectApi.createNewProject(project,subdomain).then(responseProject => {\n      dispatch({\n        type: types.CREATE_PROJECT,\n        payload: responseProject\n      })\n    }).catch(error => {\n      throw(error)\n    })\n  }\n}\n\nexport function deleteProject(project){\n  return function(dispatch){\n    return projectApi.deleteProject(project).then(responseProject => {\n      dispatch({\n        type: types.DELETE_PROJECT,\n        payload: responseProject\n      })\n    }).catch(error => {\n      throw(error)\n    })\n  }\n}\n\nexport function retrieveProject(id){\n  return function(dispatch){\n    return projectApi.retrieveProject(id).then(responseProject => {\n      dispatch({\n        type: types.PROJECT_DETAIL,\n        payload: responseProject\n      })\n    })\n    .catch(error => {\n      throw(error)\n    })\n  }\n}\n"]},"metadata":{},"sourceType":"module"}