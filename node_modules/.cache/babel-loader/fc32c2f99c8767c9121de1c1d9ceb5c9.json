{"ast":null,"code":"import _slicedToArray from \"/Users/johnvehr/Builder/kuuik/octoe_web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nclass Auth {\n  /*\n    static  authenticateToken(token){\n      sessionStorage.setItem('token', token)\n    }\n     static isUserAuthenticated(){\n      return sessionStorage.getItem('token') !== null\n    }\n     static deauthenticateUser(){\n      sessionStorage.removeItem('token')\n    }\n     static getToken(){\n      return sessionStorage.getItem('token')\n    }\n  */\n  static authenticateToken(ptth_cred) {\n    for (var http of ptth_cred.payload.headers.entries()) {\n      sessionStorage.setItem(`${http[0]}`, `${http[1]}`);\n    }\n  }\n\n  static isUserAuthenticated() {\n    return sessionStorage.getItem('access-token') !== null;\n  }\n\n  static deauthenticateUser() {\n    const header_store = ['uid', 'access-token', 'client', 'content-type'];\n    header_store.map(a => {\n      sessionStorage.removeItem(a);\n    });\n  }\n\n  static fetchToken() {\n    let client_ptth_cred = {}; //getToken and isUserAuth is honestly doing the same thing we should evaluate this\n\n    for (let _ref of Object.entries(sessionStorage)) {\n      var _ref2 = _slicedToArray(_ref, 2);\n\n      let key = _ref2[0];\n      let value = _ref2[1];\n      client_ptth_cred[`${key}`] = `${value}`;\n    }\n\n    return client_ptth_cred;\n  }\n\n  static processHead(ers, action) {\n    switch (action) {\n      case 'SIGN_UP':\n      case 'SIGN_IN':\n        this.authenticateToken(ers);\n        break;\n\n      case 'SIGN_OUT':\n        this.deauthenticateUser();\n    }\n  }\n\n}\n\nexport default Auth;","map":{"version":3,"sources":["/Users/johnvehr/Builder/kuuik/octoe_web/src/auth.js"],"names":["Auth","authenticateToken","ptth_cred","http","payload","headers","entries","sessionStorage","setItem","isUserAuthenticated","getItem","deauthenticateUser","header_store","map","a","removeItem","fetchToken","client_ptth_cred","Object","key","value","processHead","ers","action"],"mappings":";;AAAA,MAAMA,IAAN,CAAW;AAET;;;;;;;;;;;;;;AAoBA,SAAOC,iBAAP,CAAyBC,SAAzB,EAAmC;AACjC,SAAI,IAAIC,IAAR,IAAgBD,SAAS,CAACE,OAAV,CAAkBC,OAAlB,CAA0BC,OAA1B,EAAhB,EAAoD;AAClDC,MAAAA,cAAc,CAACC,OAAf,CAAwB,GAAEL,IAAI,CAAC,CAAD,CAAI,EAAlC,EAAsC,GAAEA,IAAI,CAAC,CAAD,CAAI,EAAhD;AACD;AACF;;AAED,SAAOM,mBAAP,GAA4B;AAC1B,WAAOF,cAAc,CAACG,OAAf,CAAuB,cAAvB,MAA2C,IAAlD;AACD;;AAED,SAAOC,kBAAP,GAA2B;AACzB,UAAMC,YAAY,GAAG,CAAC,KAAD,EAAO,cAAP,EAAsB,QAAtB,EAA+B,cAA/B,CAArB;AACAA,IAAAA,YAAY,CAACC,GAAb,CAAkBC,CAAD,IAAM;AACrBP,MAAAA,cAAc,CAACQ,UAAf,CAA0BD,CAA1B;AACD,KAFD;AAGD;;AAED,SAAOE,UAAP,GAAmB;AACjB,QAAIC,gBAAgB,GAAG,EAAvB,CADiB,CAEjB;;AACA,qBAAyBC,MAAM,CAACZ,OAAP,CAAeC,cAAf,CAAzB,EAAyD;AAAA;;AAAA,UAA/CY,GAA+C;AAAA,UAA1CC,KAA0C;AACvDH,MAAAA,gBAAgB,CAAE,GAAEE,GAAI,EAAR,CAAhB,GAA8B,GAAEC,KAAM,EAAtC;AACD;;AACD,WAAOH,gBAAP;AACD;;AAED,SAAOI,WAAP,CAAmBC,GAAnB,EAAuBC,MAAvB,EAA+B;AAC7B,YAAOA,MAAP;AACE,WAAK,SAAL;AACA,WAAK,SAAL;AACC,aAAKtB,iBAAL,CAAuBqB,GAAvB;AACD;;AACA,WAAK,UAAL;AACC,aAAKX,kBAAL;AANH;AAQD;;AAzDQ;;AA8DX,eAAeX,IAAf","sourcesContent":["class Auth {\n\n  /*\n    static  authenticateToken(token){\n      sessionStorage.setItem('token', token)\n    }\n\n    static isUserAuthenticated(){\n      return sessionStorage.getItem('token') !== null\n    }\n\n    static deauthenticateUser(){\n      sessionStorage.removeItem('token')\n    }\n\n    static getToken(){\n      return sessionStorage.getItem('token')\n    }\n  */\n\n\n\n  static authenticateToken(ptth_cred){\n    for(var http of ptth_cred.payload.headers.entries()){\n      sessionStorage.setItem(`${http[0]}`, `${http[1]}`)\n    }\n  }\n\n  static isUserAuthenticated(){\n    return sessionStorage.getItem('access-token') !== null\n  }\n\n  static deauthenticateUser(){\n    const header_store = ['uid','access-token','client','content-type']\n    header_store.map((a) =>{\n      sessionStorage.removeItem(a)\n    })\n  }\n\n  static fetchToken(){\n    let client_ptth_cred = {}\n    //getToken and isUserAuth is honestly doing the same thing we should evaluate this\n    for (let [key, value] of Object.entries(sessionStorage)) {\n      client_ptth_cred[`${key}`] = `${value}`;\n    }\n    return client_ptth_cred\n  }\n\n  static processHead(ers,action) {\n    switch(action){\n      case 'SIGN_UP':\n      case 'SIGN_IN':\n       this.authenticateToken(ers)\n      break;\n      case 'SIGN_OUT':\n       this.deauthenticateUser()\n    }\n  }\n\n\n}\n\nexport default Auth\n"]},"metadata":{},"sourceType":"module"}